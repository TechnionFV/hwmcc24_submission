#QCIRFuzz version 0.2
#Namespace(engine='random', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=10, seed=9330, var_ratio=0.5)
# r SAT
#QCIR-G14 60
forall(2, 4, 5)
exists(1, 3, 6, 7, 8, 9, 10)
output(11)
11 = and(10, 39, 12, 17)
12 = or(59, -1)
13 = or(20, 50, -6, 44)
14 = and(19, 60, 24)
15 = and(60, 42, -3)
16 = or(38, 43, -2)
17 = or(37, 31, 19, -4)
18 = or(-5, 33, 25, 35, 55)
19 = and(50, 29, 35, 55)
20 = and(56, 6)
21 = and(33, 59, 43, 56, 30)
22 = and(55, 49, 33, 46)
23 = or(32, 59, 47, 52)
24 = or(-3, 28, 42, 34, 45)
25 = or(54, 53, 36, 50)
26 = and(-1, 37, 51)
27 = and(39, -5)
28 = or(3, -9, 56, 4)
29 = and(54, 8, 47, 55, 48)
30 = and(55, 42)
31 = or(57, 52, 46)
32 = or(-3, 9, -7, -4, 47)
33 = and(51, 57, 3, 48, -5)
34 = and(48, 35, 38, 36, 60)
35 = or(60, 52, 5)
36 = and(50, 5, 2, 60, 46)
37 = and(47, 52, 53, -3, 59)
38 = or(10, 5, -4, 6, 43)
39 = or(44, 5)
40 = or(-6, 2, 3, 5)
41 = or(50, 9, 53)
42 = or(5, 48, 44)
43 = and(56, 55, 44)
44 = or(5, 48, 47, 56)
45 = or(8, 59)
46 = and(-9, -3, -4)
47 = or(49, 52, 58, 3, 59)
48 = and(58, 51, -8, 60, 54)
49 = or(53, -6)
50 = or(-3, -10, -7, 60)
51 = and(52, 59, 60)
52 = and(6, 7, 58)
53 = or(10, 58)
54 = and(59, 6, 1, 60, 55)
55 = and(57, -3, -7, 56)
56 = or(9, -8, -5, 10)
57 = and(6, -2, -8, 4)
58 = or(7, -3, -8, -10, -5)
59 = and(10, 7, 3, 1, -2)
60 = and(1, -10)
