#QCIRFuzz version 0.3
#Namespace(engine='levels', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=20, quantifiers=4, quiet=True, seed=759201229, top_level_quantifier='forall', var_ratio=0.5)
# r SAT
#QCIR-G14 70
forall(2, 6, 9, 11, 16, 19)
exists(13, 14)
forall(1, 3, 4, 7, 15, 17)
exists(5, 8, 10, 12, 18, 20)
output(21)
21 = and(31, 61, 59)
22 = and(49, 53)
23 = and(42, 62, 49, 58)
24 = or(39, 55)
25 = and(42, 53, 50)
26 = or(68, 58, 69)
27 = or(69, 58, 70, 49, 50)
28 = and(42, 53, 62, 41)
29 = or(27, 60, 36)
30 = and(56, 39, 55, 63, 38)
31 = or(34, 63, 29, 35)
32 = or(39, 29, 55, 38, 35)
33 = and(69, 53, 42, 37)
34 = or(28, 45, 26, 22, 60)
35 = or(26, 28, 66, 45, 60)
36 = and(44, 53, 37)
37 = or(9, -7)
38 = and(27, 48, 28)
39 = and(26, 43, 45)
40 = and(38, 56, 55, 34)
41 = or(-7, -1, -12, -20)
42 = or(-18, 17, -10)
43 = or(69, 44)
44 = and(-14, 2, -9)
45 = and(58, 62, 44, 53)
46 = and(39, 55, 38)
47 = or(63, 39, 56)
48 = and(49, 53, 50, 37, 69)
49 = and(-8, -13)
50 = or(11, 20, -2, -8)
51 = and(63, 35, 29)
52 = or(55, 34, 29, 35)
53 = and(7, 19, 20, 9, -12)
54 = or(38, 35, 39)
55 = or(48, 65, 36, 43)
56 = or(28, 65)
57 = or(55, 38)
58 = and(-10, -2)
59 = and(63, 56, 35)
60 = and(62, 41, 68)
61 = or(56, 63, 35, 29, 55)
62 = or(7, 18)
63 = or(60, 45, 64, 33, 25)
64 = or(58, 41, 70, 37)
65 = or(44, 37, 69, 58)
66 = and(44, 69, 50, 37)
67 = or(29, 35)
68 = and(8, 20)
69 = and(6, -2, -17)
70 = or(14, 19, -12, 8, 20)
