#QCIRFuzz version 0.3
#Namespace(engine='random', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=10, quantifiers=4, quiet=True, seed=459545, top_level_quantifier='forall', var_ratio=0.5)
# r UNSAT
#QCIR-G14 60
forall(5, 6, 10)
exists(3, 9)
forall(1, 8)
exists(2, 4, 7)
output(11)
11 = or(38, 18, 5)
12 = and(-8, 51, -6, 3, 35)
13 = or(25, 14)
14 = and(36, 17, 54, 24, 43)
15 = and(32, 48, 22, 58, 36)
16 = and(33, 53, 34, 44, 47)
17 = or(32, 52, 34, -9)
18 = and(-5, 8, 51)
19 = and(48, 31, 57)
20 = and(42, 37, 34, 27)
21 = and(52, 33)
22 = or(49, 24, 52, 39)
23 = or(-6, 37, 26)
24 = or(60, 39, 3, 58)
25 = and(4, 38, 50, 53)
26 = and(36, -6, 51, 53)
27 = and(3, 5, 44, 36, 48)
28 = or(46, 9, 40, 38)
29 = or(-6, 54)
30 = or(50, 3, 56, 34, 10)
31 = and(33, 60)
32 = or(10, 37, 57, 51, 41)
33 = and(56, 43)
34 = or(-2, 48)
35 = and(43, 50)
36 = or(38, 57, 49)
37 = and(60, 8, 55, 47, 59)
38 = and(-3, 47, 48, 39, 53)
39 = and(9, 7)
40 = or(-1, 57, 56)
41 = and(44, 53, 42)
42 = and(57, 55)
43 = and(55, 2, 48)
44 = and(46, 5, 48, 47, 55)
45 = and(50, 48, -4, 51)
46 = or(-4, 56, 54)
47 = or(60, 2, 54, 1)
48 = and(55, 49)
49 = or(56, -10, 59)
50 = or(53, 57, 52, 51, 58)
51 = or(56, -9, -8, 53, 60)
52 = or(5, 53, 7, 10)
53 = or(8, -6, 57, 10)
54 = or(10, 59)
55 = or(1, -3, -6)
56 = and(-9, 2, -3, 5, -1)
57 = or(58, -2, -10, -7, 3)
58 = or(9, -7, 4)
59 = and(-1, 60)
60 = and(-3, 8, -6)
