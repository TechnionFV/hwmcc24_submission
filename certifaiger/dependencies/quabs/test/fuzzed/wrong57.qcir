#QCIRFuzz version 0.3
#Namespace(engine='random', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=10, quantifiers=4, quiet=True, seed=250076722, top_level_quantifier='forall', var_ratio=0.5)
# r SAT
#QCIR-G14 60
forall(7, 9, 10)
exists(3, 5, 6)
forall(1, 4, 8)
exists(2)
output(11)
11 = and(30, 48, 38)
12 = and(35, 29)
13 = and(21, 28, 33, 31, 50)
14 = and(57, 23, 38)
15 = and(19, 34)
16 = and(36, 37, 24)
17 = and(22, 56, 38, 52)
18 = and(59, 58, 26)
19 = and(25, 47, 34, 52, 30)
20 = or(38, 48, 49, 46)
21 = or(36, 55, 35, 1)
22 = or(9, 32, 59)
23 = and(6, 59, 49, 43)
24 = or(31, 35)
25 = or(38, -5, 54, 53)
26 = or(54, 8)
27 = and(47, 49)
28 = and(33, -5, -7)
29 = or(44, 2, 56, 45)
30 = or(-8, 56, 39)
31 = or(60, 57, 42, 54)
32 = and(54, 38)
33 = or(3, 8, 44)
34 = or(-8, 38, -3, 37)
35 = and(58, 47, 8, -4, 56)
36 = or(53, 54)
37 = or(43, 58, 48)
38 = or(39, 2, -4, 3, 8)
39 = and(4, 40, 51)
40 = and(52, 5)
41 = and(56, 7, -3, 58)
42 = or(43, 45)
43 = and(53, 7, 59, 52, 48)
44 = or(54, 51)
45 = or(6, 9, 7, 51)
46 = or(-5, 49, 54, 51)
47 = and(53, 4, -9, 50)
48 = or(49, 4)
49 = or(3, -6, 2, -10, 54)
50 = or(56, -10, 7)
51 = or(4, -8, 6, 53)
52 = or(59, 7, 8)
53 = or(4, 1, -6, 60)
54 = and(-5, 57, 56, 3, -4)
55 = or(9, -3, 60, 8, 57)
56 = or(-9, -6, 59, -7, -3)
57 = or(58, 59)
58 = and(-10, -7, 8, 6)
59 = and(8, -9, 3)
60 = and(6, -2, 10, -8)
