#QCIRFuzz version 0.3
#Namespace(engine='random', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=10, quantifiers=4, quiet=True, seed=663573, top_level_quantifier='forall', var_ratio=0.5)
# r UNSAT
#QCIR-G14 60
forall(1, 4, 8)
exists(3)
forall(2, 5, 6, 7)
exists(9, 10)
output(11)
11 = and(52, 58, 30, 12, 17)
12 = or(-7, -8)
13 = and(58, -8, 54)
14 = and(31, 32, 44, 3)
15 = or(52, 53, 5, 1, 43)
16 = and(37, 53, -5)
17 = or(28, 32, 52)
18 = or(45, 39, -10, 23, -3)
19 = or(54, 44, 60, 48)
20 = and(54, 47, 52, 22, 26)
21 = and(2, 32, 25)
22 = or(58, 50, -9, 48)
23 = or(1, 48)
24 = or(28, 29, 55)
25 = and(53, 41)
26 = or(33, 5, -1)
27 = or(55, 56)
28 = or(-1, 37, 49, 41, 29)
29 = or(57, 33, 41, 34)
30 = or(52, 57, 49, -2, 10)
31 = and(-4, 44, 48, 54, 32)
32 = or(60, 50, 46)
33 = and(60, -9, 8, 5)
34 = and(35, 40, 49)
35 = and(41, 60, 39, 6, 56)
36 = and(10, 50, 38, 42)
37 = or(52, 41, -9, 6, 42)
38 = and(2, 43, 41, 52)
39 = or(-7, 56, 57, 58, 48)
40 = and(57, 45, -6, 46, 43)
41 = and(-7, 8, 43)
42 = or(3, 2, 1, 43)
43 = or(57, 60, -3, 58)
44 = or(-5, -6)
45 = or(48, -4, 54)
46 = or(2, 52, 57)
47 = or(-4, 54)
48 = and(6, 58, 9)
49 = and(-7, 59, 53)
50 = and(56, -2, -1, -4)
51 = and(58, 56, 59, 9, 57)
52 = or(58, 3)
53 = and(-2, -4)
54 = and(57, 3, 60, 56, -10)
55 = or(9, 5, 56)
56 = or(-3, -8, 59, -10)
57 = and(7, -6, 58)
58 = or(8, 10)
59 = or(-5, 8, -3, -10)
60 = or(-10, -2, 6, 4, -3)
