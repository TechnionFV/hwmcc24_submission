#QCIRFuzz version 0.3
#Namespace(engine='random', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=10, quantifiers=4, quiet=True, seed=529304777, top_level_quantifier='forall', var_ratio=0.5)
# r UNSAT
#QCIR-G14 60
forall(2, 8)
exists(3, 4, 9)
forall(1, 5, 7)
exists(6, 10)
output(11)
11 = or(59, 14, 15, 13)
12 = and(30, -4, 2)
13 = and(58, 26)
14 = or(45, 26, 40)
15 = and(44, 3, 38, 46)
16 = and(32, 43, 55, 5, 45)
17 = and(32, 20, 24)
18 = or(59, 19, 3, 56)
19 = and(43, 46)
20 = and(41, 50, 23)
21 = and(-6, 26)
22 = or(23, 32, 40, 36)
23 = and(51, 35, 59)
24 = or(29, 57)
25 = or(41, 1, -9)
26 = and(52, 39)
27 = or(2, 55, 50)
28 = and(-2, 39, 29, 57, 50)
29 = and(38, 34, 40)
30 = and(43, 34)
31 = and(39, 38, 49, 41, -8)
32 = and(55, 36, 51)
33 = and(35, 57, 43, 49)
34 = or(35, 46, 36, 44)
35 = or(45, 3)
36 = and(42, 52)
37 = and(47, 45, -8)
38 = and(55, 2, 3)
39 = and(60, 54)
40 = and(51, 47, -4, 42)
41 = and(48, 1, 8)
42 = or(-7, -1, 2, 56)
43 = or(1, 54, 44, 45)
44 = or(54, 6, 47, -5)
45 = and(55, -10, -6)
46 = and(-7, 56, -10, 50)
47 = or(8, 52, 55, -2, 58)
48 = and(60, -4)
49 = and(60, 10, 59)
50 = or(-6, 58, 60, 4)
51 = and(54, 3, 53, 2)
52 = and(1, 57, 58)
53 = or(-10, -2, -1, 4, 59)
54 = or(-2, -9)
55 = and(6, 1, 60)
56 = or(57, -6)
57 = and(1, -8, 10)
58 = or(59, 10)
59 = and(8, 9)
60 = or(-9, 3, -10, -4)
