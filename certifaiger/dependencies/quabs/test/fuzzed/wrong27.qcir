#QCIRFuzz version 0.3
#Namespace(engine='levels', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=10, quantifiers=4, quiet=True, seed=1058952129, top_level_quantifier='forall', var_ratio=0.5)
# r UNSAT
#QCIR-G14 60
forall(8, 10)
exists(1, 3, 5)
forall(4, 7, 9)
exists(2, 6)
output(11)
11 = or(44, 51, 22, 33)
12 = and(-3, -6, -7, -10)
13 = or(60, 20, 59, 58)
14 = and(20, 49)
15 = and(54, 16)
16 = and(57, 19)
17 = and(29, 12, 49)
18 = or(26, 31, 40)
19 = or(59, 60)
20 = or(8, 10)
21 = or(20, 56)
22 = and(28, 54)
23 = and(56, 60, 20, 12)
24 = and(2, 5)
25 = and(28, 40, 37)
26 = and(17, 14, 23)
27 = or(58, 29)
28 = or(36, 23)
29 = and(6, -9)
30 = or(37, 28)
31 = and(55, 57, 52, 23, 43)
32 = or(54, 31)
33 = and(26, 16, 40, 31, 48)
34 = or(31, 47, 26, 42, 16)
35 = or(37, 48)
36 = and(56, 24, 58, 38)
37 = and(21, 55, 52, 50, 39)
38 = and(-3, 6, -7)
39 = and(20, 38, 49, 12, 60)
40 = or(52, 17, 50)
41 = or(37, 48)
42 = and(21, 52)
43 = or(58, 12, 59)
44 = and(37, 16, 26, 46, 40)
45 = and(46, 26, 42, 47)
46 = and(21, 19, 50, 27, 13)
47 = and(50, 43, 23, 14, 52)
48 = or(57, 27, 43)
49 = or(-9, 3, -8)
50 = and(56, 59, 49)
51 = or(46, 47, 16)
52 = or(56, 12, 29)
53 = or(42, 31, 48, 46)
54 = and(21, 55, 14, 57, 13)
55 = or(20, 49)
56 = and(9, -3, 1)
57 = and(59, 20)
58 = or(5, -10)
59 = or(-3, -10, 4, 7)
60 = or(7, 5, -4, -10)
