#QCIRFuzz version 0.3
#Namespace(engine='random', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=20, quantifiers=4, quiet=True, seed=905391721, top_level_quantifier='forall', var_ratio=0.5)
# r SAT
#QCIR-G14 70
forall(3, 9, 11, 16)
exists(2, 6, 7, 8, 10, 15, 19, 20)
forall(1, 5, 12, 13, 14, 18)
exists(4, 17)
output(21)
21 = or(45, 35, 51, 27)
22 = and(69, 63, 47, -5)
23 = or(-9, -2, 40, 56, 28)
24 = or(48, 28)
25 = and(65, -13, -1, 36, 62)
26 = or(9, 4, 58)
27 = and(41, 37)
28 = or(36, -12, 58, 52, -3)
29 = and(61, 2, 8, 33, -9)
30 = or(41, -4, -2)
31 = or(62, 47, 70)
32 = or(60, -19)
33 = or(37, 46)
34 = or(-11, 10, 37, 12)
35 = and(63, 44, 50, 54, 4)
36 = or(64, -20)
37 = and(15, 68, 60, 70)
38 = or(60, 53, 65, 49)
39 = and(-13, 47, 42, -16, 43)
40 = and(48, 42, 53)
41 = or(70, -11, 49, 61)
42 = or(70, 9, 44, 15, 65)
43 = and(-18, 8, 61, 63)
44 = and(-10, 64, -3, 62, 47)
45 = and(2, 67, -5, 52)
46 = or(1, 60, -15)
47 = and(-1, 50)
48 = and(63, -18, 67, -9, -15)
49 = or(-4, 17, 16, 52, 50)
50 = or(18, 15)
51 = and(64, 56)
52 = or(53, 58, 60)
53 = or(61, 56, -5, 69)
54 = and(57, -17, -20, 2, -9)
55 = or(19, 56, 64, 10, 69)
56 = or(-15, 12, -16, 57, 66)
57 = or(18, -3)
58 = and(66, 6, 65, 59)
59 = and(65, -2, -17, 7)
60 = or(69, 3, 63, 1)
61 = or(10, 19)
62 = and(70, 5)
63 = or(-13, -2, 69, -3)
64 = and(5, 14, -20, 69, 65)
65 = or(-19, 9, 2, 1, 67)
66 = or(-14, -9, 68)
67 = or(6, -9, 17, -8, 15)
68 = and(70, -10)
69 = or(16, -7, 18, 20, -12)
70 = or(5, -15, 20, 1, 2)
