#QCIRFuzz version 0.3
#Namespace(engine='random', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=20, quantifiers=4, quiet=True, seed=921796935, top_level_quantifier='forall', var_ratio=0.5)
# r UNSAT
#QCIR-G14 70
forall(1, 6, 13, 14, 16, 18, 19, 20)
exists(5, 17)
forall(2, 3, 4, 7, 9, 11, 15)
exists(8, 10, 12)
output(21)
21 = or(23, 36, 24)
22 = and(41, 35, 54, -5)
23 = or(26, 31, 46, 32)
24 = and(-18, 53, -12, 32)
25 = or(42, 26, 37, 44, 3)
26 = and(32, -15, 57, 29, 45)
27 = or(-5, 41, 31, -3)
28 = or(12, 49, 54)
29 = and(48, 35, 50)
30 = or(44, -18, 57)
31 = or(-19, 67, 62, 32)
32 = and(65, 43, 48, -17)
33 = or(48, 65)
34 = or(67, 50)
35 = and(3, -16, 50)
36 = and(44, 45, -6, 46, -17)
37 = or(14, -8)
38 = and(61, 41, 45)
39 = or(-8, 60, 68, 58, 20)
40 = and(1, 55, 51, 50, 13)
41 = or(69, 62)
42 = and(-13, 68, 10)
43 = or(70, 65)
44 = or(64, -13, 53, 10)
45 = and(57, 61)
46 = or(50, -4)
47 = or(4, 58, 11, -8, 62)
48 = or(-10, 12)
49 = and(61, 50, 20, -5)
50 = or(63, -11, 66)
51 = and(64, 8)
52 = and(67, -18, -11, 70)
53 = or(56, -20, 8)
54 = or(-9, -12, 60)
55 = or(63, 10, -2)
56 = or(61, -3, -17, 65, 66)
57 = and(63, -2, 59)
58 = or(63, 65)
59 = or(-17, -8, 1, -3, 4)
60 = and(-2, -10, 4, 20)
61 = or(10, 66, 7, -3)
62 = and(19, -9, 12, 11)
63 = and(-14, 16, 17)
64 = and(-12, 1, 67, 15, 69)
65 = or(20, 14)
66 = and(1, 8)
67 = or(14, -19)
68 = or(14, -19, 18, -10)
69 = and(1, -10, -3)
70 = and(-13, 19, 12, -10, 4)
