#QCIRFuzz version 0.3
#Namespace(engine='random', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=10, quantifiers=4, quiet=True, seed=312880545, top_level_quantifier='forall', var_ratio=0.5)
# r UNSAT
#QCIR-G14 60
forall(6)
exists(3, 7, 8)
forall(1, 2, 5, 10)
exists(4, 9)
output(11)
11 = or(59, 14, 27, 22, 26)
12 = and(51, 37)
13 = or(32, 43, 38, 46, -6)
14 = and(-1, 59, 56)
15 = or(24, 3, 23, -6)
16 = or(28, 60, 53, 4)
17 = and(50, 45, 27)
18 = and(19, -2)
19 = or(5, -7)
20 = or(49, -9)
21 = or(26, 35)
22 = and(52, 47)
23 = or(42, 58, 39, 53)
24 = or(58, 57, 26)
25 = or(4, 35, -10, 52)
26 = and(50, 52)
27 = and(33, 42)
28 = or(57, 43, 42, 7, 39)
29 = and(47, 9, 34, -5)
30 = or(41, 6, 51, 55, 32)
31 = or(41, 53, 34, -7, 32)
32 = and(36, 56, -8)
33 = or(57, 10, 46, 2)
34 = or(50, -1, 7, 44)
35 = or(48, -3, 36, 39, 46)
36 = and(46, 54, 50)
37 = or(54, 41, 43, 44)
38 = and(56, 58, -2)
39 = or(56, 5, 4, 45)
40 = and(-5, -3, 57)
41 = and(52, 6, 60, 51)
42 = or(-8, 58)
43 = and(58, 10, 46, 57)
44 = and(51, 56, 6, 45, 46)
45 = and(9, 5, 50, -10)
46 = and(56, -3, 6, 59, 2)
47 = and(2, 7)
48 = or(55, 3, 54, 2)
49 = or(-5, 1, -8, 57)
50 = or(-9, 52, 7, 5)
51 = or(-7, 59, 53, 56, 6)
52 = and(-3, 59)
53 = and(59, 6, 58, -3)
54 = or(58, 60, 56, 3)
55 = or(-1, 56, -5)
56 = and(9, 60, 1)
57 = and(-3, 6, 5, -4)
58 = or(-10, 60, 9, 1, -5)
59 = and(-6, -2, 3, -9, 8)
60 = and(9, -2, 1)
