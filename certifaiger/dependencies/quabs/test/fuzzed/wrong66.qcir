#QCIRFuzz version 0.3
#Namespace(engine='levels', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=10, quantifiers=4, quiet=True, seed=195712629, top_level_quantifier='forall', var_ratio=0.5)
# r SAT
#QCIR-G14 60
forall(4, 5)
exists(2, 8)
forall(7, 9, 10)
exists(1, 3, 6)
output(11)
11 = and(36, 17)
12 = or(19, 26, 51)
13 = or(14, 37, 16)
14 = or(49, 44, 56)
15 = and(38, 41)
16 = or(21, 27, 52)
17 = or(20, 43, 45)
18 = or(20, 57, 19)
19 = and(47, 58)
20 = and(37, 16, 59, 47, 38)
21 = and(-6, 1)
22 = and(19, 33)
23 = and(54, 29, 56)
24 = or(9, 4, 6, 10)
25 = and(5, 3)
26 = and(38, 58)
27 = or(8, -6)
28 = and(38, 37, 34)
29 = and(8, 7, 2, 10)
30 = or(24, 25, 27)
31 = or(-8, 1, 4, -2, 10)
32 = or(23, 53, 37, 14, 34)
33 = and(16, 14)
34 = and(27, 60)
35 = or(47, 59, 37, 30, 58)
36 = or(33, 42)
37 = or(44, 54, 49)
38 = or(25, 56)
39 = and(-3, -7, 8, 10)
40 = and(26, 42, 32, 51)
41 = or(44, 39)
42 = and(47, 59)
43 = and(58, 16, 23, 38)
44 = and(-7, -4)
45 = or(30, 53)
46 = and(33, 15, 35, 28, 19)
47 = and(54, 39, 21, 24)
48 = and(43, 35)
49 = and(-10, -2)
50 = or(13, 57, 32, 19, 42)
51 = or(38, 34, 41, 58)
52 = and(4, 3)
53 = or(52, 49, 44, 54, 24)
54 = and(1, -4, 5)
55 = or(35, 13, 51, 28)
56 = or(-8, 2)
57 = or(38, 37)
58 = and(52, 60, 44)
59 = or(60, 24, 44)
60 = or(-6, 9, 8, -4)
