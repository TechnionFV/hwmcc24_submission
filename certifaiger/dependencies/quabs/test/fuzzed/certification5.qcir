#QCIRFuzz version 0.3
#Namespace(engine='levels', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=20, quantifiers=4, quiet=True, seed=939032108, top_level_quantifier='forall', var_ratio=0.5)
# r UNSAT
#QCIR-G14 70
forall(9, 10, 14, 15, 18)
exists(1, 2, 3, 4, 5, 8, 19)
forall(6, 12, 16, 20)
exists(7, 11, 13, 17)
output(21)
21 = and(62, 26)
22 = or(34, 53, 52)
23 = or(-20, -14, 5, -15, 19)
24 = or(-15, -6, 10, -20, 8)
25 = and(52, 24)
26 = or(58, 65, 54, 42)
27 = or(36, 30)
28 = or(65, 31, 54, 32, 27)
29 = and(-17, -1, 5, -3)
30 = and(23, 53, 50, 60)
31 = or(63, 51)
32 = or(45, 25, 36)
33 = or(38, 47, 34, 48, 53)
34 = and(-17, 8)
35 = or(54, 58, 40)
36 = and(37, 50, 52, 47)
37 = and(13, -7, -5)
38 = and(19, -5, -10)
39 = and(-9, 5, 13, 6, -19)
40 = or(25, 59)
41 = and(65, 42, 58)
42 = or(46, 33, 30, 69)
43 = or(38, 47, 61)
44 = and(32, 49, 31, 42, 54)
45 = and(57, 37, 38)
46 = and(23, 37)
47 = and(19, 4, -3)
48 = and(-1, 20, -17, 10, 9)
49 = or(30, 66, 36)
50 = or(20, 1, -11, 6)
51 = or(61, 24, 38, 29, 60)
52 = and(-20, -3)
53 = and(-15, 1, -11, -17)
54 = or(66, 36, 22, 33, 45)
55 = and(64, 40, 31, 70)
56 = and(40, 65)
57 = or(-12, 1)
58 = and(66, 43)
59 = or(50, 37, 57)
60 = or(-2, -7)
61 = or(8, -11, -19, -17, 16)
62 = or(32, 65, 70, 64)
63 = and(60, 23)
64 = and(46, 36, 22, 51, 43)
65 = and(43, 25)
66 = or(60, 29, 50, 52, 57)
67 = or(65, 40, 58)
68 = or(40, 64, 58, 65, 42)
69 = and(23, 39)
70 = and(69, 22, 25)
