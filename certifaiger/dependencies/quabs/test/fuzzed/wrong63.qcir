#QCIRFuzz version 0.3
#Namespace(engine='random', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=10, quantifiers=4, quiet=True, seed=1018472054, top_level_quantifier='forall', var_ratio=0.5)
# r SAT
#QCIR-G14 60
forall(8)
exists(1, 6, 9)
forall(2, 3, 4, 5)
exists(7, 10)
output(11)
11 = and(43, 12)
12 = and(60, 40, 41)
13 = and(46, 59, 4, 19)
14 = and(24, -8, 49, 60, 44)
15 = and(20, 36, 44, 40, 54)
16 = or(-7, 18, -4, 19, 45)
17 = and(38, 6, 56, 27)
18 = and(10, -2)
19 = and(34, 33, 27, 56)
20 = and(37, 28, 57, 45)
21 = or(28, 26, 45, 59, 23)
22 = and(10, 55, -8, 60)
23 = or(7, 50, -2)
24 = and(53, 45, 42, 58, 50)
25 = or(54, 44, 48)
26 = and(54, -10, 1)
27 = or(47, 36)
28 = and(39, 41, 5, 47)
29 = or(36, -9, 37, 55)
30 = or(33, -4)
31 = and(47, 41)
32 = or(-7, 47)
33 = or(58, 51, 3)
34 = or(50, 52, 57, -2, 5)
35 = and(55, -9, 10, 43, 6)
36 = or(37, 58)
37 = and(45, 10, 51, 58, 8)
38 = or(41, 45)
39 = and(49, -9)
40 = or(41, 49, -8, 43)
41 = and(52, 51)
42 = or(53, 2, 4, 54)
43 = or(-5, 58, 44, 51)
44 = and(48, 9, 60)
45 = or(10, 1)
46 = and(-1, -6, 57, 10)
47 = and(-7, -3, 1, 59)
48 = or(1, 10, 58, 60)
49 = or(57, -8)
50 = or(58, 60, 56)
51 = or(58, 59, 3)
52 = or(53, -4)
53 = and(56, 54)
54 = or(58, -8, -4, -2)
55 = or(57, -6)
56 = or(1, 10, -3)
57 = and(5, -8, -1)
58 = or(-9, -6, -1)
59 = or(3, -10, 4, 6, 2)
60 = or(4, -10, -5, -1)
