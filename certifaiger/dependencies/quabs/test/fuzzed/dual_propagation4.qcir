#QCIRFuzz version 0.3
#Namespace(engine='random', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=10, quantifiers=4, quiet=True, seed=385207877, top_level_quantifier='forall', var_ratio=0.5)
# r UNSAT
#QCIR-G14 60
forall(5, 8)
exists(1, 7)
forall(3, 6, 10)
exists(2, 4, 9)
output(11)
11 = and(27, 59, 43, 33)
12 = and(48, 28, 58)
13 = or(30, -8, 4, 10)
14 = and(42, 60, 20, 56, 57)
15 = and(50, 7, -1)
16 = or(-4, 54, -6, 27)
17 = and(24, 36, 22, 37)
18 = and(-10, 57, 60)
19 = and(23, 34, 50)
20 = or(9, 51, 27, 24)
21 = and(35, 39, 59, 30, 44)
22 = and(24, 47, 53, 40, 57)
23 = and(60, 52, -10, 53)
24 = or(58, 28, 34, 25)
25 = and(51, -5, 44, 46, 6)
26 = or(8, 39, 46)
27 = or(30, 58, 37)
28 = and(56, 46, 44)
29 = and(7, 58, 59)
30 = and(42, 53)
31 = or(-9, 58)
32 = or(53, 9, 46, 54, 35)
33 = or(-7, 57)
34 = or(41, 38, 54, 57)
35 = or(36, 38, -1)
36 = or(54, 46, -9, 39, 55)
37 = or(-8, 7, 48)
38 = or(58, 45, 46)
39 = or(56, 51, -7)
40 = and(58, -9)
41 = or(-3, 42, 6)
42 = and(-9, -4, 58)
43 = and(56, 53, 47)
44 = and(-7, 46, 60)
45 = and(-10, 48)
46 = and(4, 51, 54)
47 = or(4, 60)
48 = or(-10, 49, 51, 1)
49 = or(4, 9, 54)
50 = and(52, -10)
51 = and(4, -10, 59)
52 = and(59, 58, 8)
53 = or(58, 56)
54 = or(10, 59)
55 = and(2, 3, 60, 7, 57)
56 = or(10, 57, 4, 59)
57 = or(-8, 5)
58 = or(8, -3, 60, -9)
59 = or(-8, -5)
60 = and(-9, -3, 6, 2, -10)
