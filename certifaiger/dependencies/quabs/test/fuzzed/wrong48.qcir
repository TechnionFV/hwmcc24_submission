#QCIRFuzz version 0.3
#Namespace(engine='levels', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=10, quantifiers=2, quiet=True, seed=928615274, top_level_quantifier='forall', var_ratio=0.5)
# r UNSAT
#QCIR-G14 60
forall(3, 5, 6, 7, 9, 10)
exists(1, 2, 4, 8)
output(11)
11 = or(39, 47, 14)
12 = and(60, 53, 30)
13 = and(9, -1, -7)
14 = and(38, 48, 20, 52)
15 = or(19, 31, 13)
16 = and(-5, -8, -7, -4)
17 = and(37, 35)
18 = and(20, 22)
19 = and(8, -2, -3, -10)
20 = or(28, 44, 15, 21, 40)
21 = and(56, 42, 60)
22 = or(28, 12, 40, 26, 58)
23 = or(40, 35, 15, 51, 26)
24 = or(-7, -3, -9, 1)
25 = and(-10, -3, 8, -2, 6)
26 = and(25, 59, 27)
27 = or(8, -9, 5, 7)
28 = and(16, 30, 56, 43)
29 = or(22, 46, 33, 50)
30 = or(-1, -2, -3)
31 = and(5, 7, -4)
32 = and(52, 48)
33 = or(28, 51, 44)
34 = and(56, 42, 31, 25, 13)
35 = and(54, 43)
36 = or(46, 20, 38, 52, 48)
37 = or(59, 42, 60, 43, 54)
38 = and(37, 28, 15)
39 = and(23, 20)
40 = or(59, 43)
41 = or(52, 20, 33, 38, 17)
42 = or(-1, -2, -7, 9)
43 = or(-5, -6, -3)
44 = and(53, 25)
45 = and(4, -2, -5, 10)
46 = or(51, 12)
47 = and(46, 22, 50, 33, 52)
48 = or(35, 37, 15, 21)
49 = and(52, 33, 17, 38, 46)
50 = or(12, 35)
51 = or(19, 59, 60, 27, 54)
52 = or(28, 35)
53 = and(-3, 4)
54 = or(-3, 5)
55 = and(22, 50)
56 = and(5, 6, -1, -2, -10)
57 = and(20, 17, 33)
58 = or(43, 24)
59 = and(-1, -2, 6, 9)
60 = or(8, 10, -1)
