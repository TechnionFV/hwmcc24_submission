#QCIRFuzz version 0.3
#Namespace(engine='levels', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=20, quantifiers=4, quiet=True, seed=916466684, top_level_quantifier='forall', var_ratio=0.5)
#r SAT
#QCIR-G14 70
forall(1, 3, 7, 11, 19)
exists(5, 6, 15)
forall(2, 9, 10, 13)
exists(4, 8, 12, 14, 16, 17, 18, 20)
output(21)
21 = or(34, 36, 51, 35)
22 = or(4, -8)
23 = and(-6, -18, 9, 7, 3)
24 = or(-18, 5, -13, -16)
25 = or(45, 43)
26 = and(8, -17, 16)
27 = or(37, 49, 42, 64, 54)
28 = and(10, 1)
29 = and(46, 54, 37, 59)
30 = and(57, 53, 55, 25, 48)
31 = or(5, 13, 20, -7)
32 = and(49, 59, 26)
33 = and(67, 44, 38, 47, 68)
34 = and(25, 55, 56, 53, 61)
35 = or(56, 53, 65, 25)
36 = and(55, 65, 56, 33, 53)
37 = and(-7, 17, -14, -20)
38 = or(31, 24, 37, 22, 46)
39 = and(56, 53, 25, 48, 55)
40 = or(26, 24, 37)
41 = or(33, 48)
42 = or(8, -6)
43 = and(24, 64, 37, 28)
44 = and(59, 37, 31)
45 = or(54, 28)
46 = and(15, 5)
47 = or(24, 54, 26)
48 = and(32, 40, 66, 47)
49 = or(-17, -12, 20, -10)
50 = and(-10, 3, -4)
51 = and(33, 56, 48)
52 = and(26, 46, 31, 37, 50)
53 = or(52, 32, 43, 44)
54 = and(-8, 20, 19, 17)
55 = and(32, 47, 52, 40)
56 = or(43, 68)
57 = and(45, 44, 43)
58 = or(42, 70, 31, 49)
59 = or(13, -19, -1)
60 = and(65, 33)
61 = and(47, 52, 27, 68, 38)
62 = or(70, 26, 42, 28)
63 = or(33, 55, 65, 53)
64 = or(1, -18)
65 = or(45, 52, 68)
66 = or(24, 23, 54)
67 = or(23, 24, 42, 37)
68 = and(28, 31)
69 = and(65, 56, 57)
70 = or(2, -14, 12)
