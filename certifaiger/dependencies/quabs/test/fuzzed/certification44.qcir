#QCIRFuzz version 0.3
#Namespace(engine='levels', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=20, quantifiers=4, quiet=True, seed=368402886, top_level_quantifier='forall', var_ratio=0.5)
#r SAT
#QCIR-G14 70
forall(8, 14, 15, 18, 19)
exists(2)
forall(1, 4, 7, 11, 12, 13, 16)
exists(3, 5, 6, 9, 10, 17, 20)
output(21)
21 = and(50, 35, 59, 34, 46)
22 = and(5, 9, 10, 19, 15)
23 = or(62, 31, 43, 28)
24 = and(28, 27, 47, 43, 62)
25 = or(62, 27)
26 = or(65, 43, 49, 47, 27)
27 = and(58, 56, 70, 69, 30)
28 = and(37, 42)
29 = and(43, 62, 27, 31, 65)
30 = or(12, 16, 8, 6, 5)
31 = and(56, 36, 54, 70, 45)
32 = and(6, -1, 2, 20)
33 = and(63, 25, 39, 57)
34 = or(41, 24, 57, 63, 26)
35 = or(29, 25, 23)
36 = or(-20, -9, -13)
37 = or(10, -2, 5, -15, 7)
38 = or(65, 49, 27)
39 = or(27, 62, 49, 31, 28)
40 = or(-13, 1, -18, 20, -9)
41 = or(49, 28)
42 = or(19, 14, 15, 2)
43 = and(54, 58, 67, 70)
44 = or(43, 62, 47, 31)
45 = or(-15, -18)
46 = and(38, 60)
47 = and(22, 69, 36, 48, 40)
48 = or(-20, -7, -10)
49 = and(58, 22, 55)
50 = or(26, 63, 38, 29)
51 = and(31, 47, 27, 28, 62)
52 = and(9, 12, 20, 18)
53 = and(39, 41, 25, 44)
54 = and(-5, -20)
55 = and(-10, 3, 5, -6, -16)
56 = or(-1, 16, -20)
57 = and(47, 43, 27, 28)
58 = and(-6, 15)
59 = or(26, 63, 24, 25, 23)
60 = or(27, 31, 47)
61 = or(47, 31, 27)
62 = or(69, 30, 67, 52)
63 = or(49, 27, 62)
64 = and(43, 62, 31, 28)
65 = and(48, 45)
66 = and(25, 44, 26, 29, 39)
67 = and(3, -18, -8, -2)
68 = and(57, 24, 60, 44, 29)
69 = or(18, 5, -4)
70 = or(16, -12, -4, 14, 2)
