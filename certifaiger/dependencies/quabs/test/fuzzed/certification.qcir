#QCIRFuzz version 0.3
#Namespace(engine='random', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=20, quantifiers=4, quiet=True, seed=475435189, top_level_quantifier='forall', var_ratio=0.5)
# r SAT
#QCIR-G14 70
forall(8, 10, 12, 13, 17, 18, 20)
exists(4, 5, 7, 9, 11, 16)
forall(1, 2, 15, 19)
exists(3, 6, 14)
output(21)
21 = or(58, 19, 34)
22 = and(23, 50, 29, 70)
23 = and(49, 61, 31)
24 = and(25, 60, -12, 26)
25 = or(-18, 57, 34)
26 = or(56, 43, 10, 62, 1)
27 = and(30, -11, 46, 3)
28 = or(58, 9, 59, 64, -15)
29 = or(-12, 51, 2)
30 = and(65, 56, 43, -16)
31 = and(9, 44, 36, 54, 10)
32 = and(14, 49, 56, 18, 13)
33 = and(63, 38, 42)
34 = and(6, 48, 36, 64)
35 = or(45, 67, 39)
36 = or(49, 45, 15)
37 = and(2, 52, 4, 43)
38 = or(61, 1, 44, 3)
39 = and(-7, 52, -1)
40 = and(4, 11)
41 = or(18, 68, -20, 44, 11)
42 = and(-1, -4, 69, 49)
43 = or(-14, 58, 61, 69)
44 = and(60, 45)
45 = or(46, -16)
46 = or(49, 51, 53, -4, 57)
47 = or(65, -9, 61)
48 = or(58, 13, -6, 53, 67)
49 = and(20, 68)
50 = and(53, 65)
51 = and(3, -17, 1, 65, 53)
52 = or(-17, 13, 54, -15)
53 = or(18, -8, 20, -5, 58)
54 = and(59, 8)
55 = or(66, 65, 16, 20)
56 = or(69, -7, 12)
57 = or(65, 66, 15, -11)
58 = or(67, 61)
59 = or(-14, 69, 61, 4)
60 = or(2, 65, 15, -1)
61 = and(63, 70)
62 = or(64, -17)
63 = and(67, 70, 8, 13)
64 = or(6, 1, 65)
65 = and(-10, 11, 12, 6, 18)
66 = or(-13, 17, -11)
67 = or(2, 1, 70)
68 = or(18, 6, -10, 5, -1)
69 = or(-16, -15, -10, 4)
70 = or(15, 20)
