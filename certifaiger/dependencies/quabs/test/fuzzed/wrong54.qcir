#QCIRFuzz version 0.3
#Namespace(engine='levels', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=10, quantifiers=4, quiet=True, seed=387785727, top_level_quantifier='forall', var_ratio=0.5)
# r UNSAT
#QCIR-G14 60
forall(1, 3, 4, 10)
exists(2, 6, 7, 8)
forall(9)
exists(5)
output(11)
11 = or(51, 56, 45)
12 = and(31, 54, 49, 36)
13 = and(8, 4)
14 = or(31, 32, 46)
15 = or(37, 52)
16 = or(32, 22, 42, 31, 36)
17 = or(54, 22, 46)
18 = and(24, 20, 25)
19 = or(10, 5, 1, 7, 3)
20 = and(4, -8, -6)
21 = and(24, 40, 13, 20, 52)
22 = and(29, 41, 57, 26, 53)
23 = or(20, 19, 37, 52, 40)
24 = and(-10, -4, -2)
25 = or(3, 9, -1)
26 = or(27, 24)
27 = or(-9, 7, 10, -3, 8)
28 = and(43, 55, 54)
29 = and(13, 40)
30 = and(39, 31, 35, 49)
31 = and(26, 48, 41)
32 = or(53, 21, 50, 15, 41)
33 = and(8, 3, -4, 7, 1)
34 = and(23, 15)
35 = or(58, 18)
36 = and(53, 29, 21)
37 = and(-3, 2, 10, -8)
38 = and(26, 15, 41, 50)
39 = and(47, 26, 41)
40 = and(2, 4, -1, -8, 10)
41 = and(19, 25, 52, 20, 13)
42 = and(47, 57)
43 = or(47, 58, 18, 21, 50)
44 = and(34, 22, 36, 32)
45 = and(38, 46)
46 = and(48, 21, 18)
47 = or(33, 24, 13, 40)
48 = and(27, 20, 33, 52)
49 = or(58, 50, 15, 21)
50 = and(52, 20, 24, 13)
51 = or(32, 36, 54, 39)
52 = and(-1, -9, -3, -6, -4)
53 = and(20, 24, 27, 19)
54 = or(48, 53, 57, 47, 29)
55 = and(26, 23, 47, 57)
56 = and(32, 42, 34, 38)
57 = and(40, 27)
58 = and(52, 37)
59 = or(31, 36, 39, 38)
60 = or(46, 36, 38, 34, 31)
