#QCIRFuzz version 0.3
#Namespace(engine='random', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=10, quantifiers=4, quiet=True, seed=311238599, top_level_quantifier='forall', var_ratio=0.5)
# r UNSAT
#QCIR-G14 60
forall(3, 4, 10)
exists(8, 9)
forall(1, 2)
exists(5, 6, 7)
output(11)
11 = and(24, 50)
12 = and(8, 13, 32)
13 = or(17, 3, 60, -7, 36)
14 = and(-6, -5, 37, 60)
15 = and(37, 53, 8, 3)
16 = or(24, 48, 51)
17 = or(1, 57)
18 = or(10, 57, -6)
19 = or(20, 40)
20 = and(60, 56, 25, 37)
21 = and(-6, 33, 46, 31, 59)
22 = or(-5, 34, 30, -2)
23 = or(8, 4, 55, -10)
24 = or(39, 25, -9, 48)
25 = and(41, 51, 2, 44, 49)
26 = and(52, 50, 55)
27 = or(38, -5)
28 = or(6, 38, -7, 47, 45)
29 = and(32, 54, 35)
30 = or(7, 51, 8, 35)
31 = or(4, -1)
32 = or(44, 55, 50, 56, 37)
33 = or(38, 5, 34, 39)
34 = and(54, 51, -10, 56)
35 = or(40, 43)
36 = and(2, 53)
37 = or(41, -10, 45)
38 = or(1, 40, 44)
39 = and(48, 8, 57, 51, 59)
40 = and(5, 43, 47, 56)
41 = and(-8, 55)
42 = or(46, 47)
43 = and(10, 46, -9)
44 = and(-6, 54, 49)
45 = or(-1, -2, 50, 60)
46 = or(-4, 5)
47 = or(56, -5)
48 = and(60, 58, -4, 57)
49 = and(-5, 57, 50, 53, 7)
50 = or(2, 9, 57, 3)
51 = or(60, 55)
52 = and(58, 4, 7)
53 = or(-9, -2, -7, 1)
54 = or(60, 59)
55 = and(58, 3, 56)
56 = and(59, 58, -4, 60, 3)
57 = and(-7, 58, -3, 9)
58 = or(3, -7)
59 = and(6, -5, 4)
60 = or(4, 5)
