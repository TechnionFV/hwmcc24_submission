#QCIRFuzz version 0.3
#Namespace(engine='random', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=10, quantifiers=4, quiet=True, seed=233227, top_level_quantifier='forall', var_ratio=0.5)
# r UNSAT
#QCIR-G14 60
forall()
exists(1, 2, 3, 4, 10)
forall(6, 8, 9)
exists(5, 7)
output(11)
11 = and(21, 26, 3)
12 = and(20, 54)
13 = and(56, 44, 19, 14, 18)
14 = and(-6, 37)
15 = and(35, 39, 32)
16 = and(39, 56)
17 = or(40, 44, 7)
18 = and(22, 25, 41)
19 = and(37, -8, 44, 54, 6)
20 = and(-3, 37)
21 = or(51, 60, 27)
22 = and(10, -8, 58, 26, 55)
23 = or(55, 40)
24 = or(33, 58, 49, 10)
25 = and(-9, 47, -7)
26 = or(38, 48, 2, -5)
27 = and(58, 38, -9)
28 = or(30, 51, 53)
29 = and(-9, 54, 42, 36, 56)
30 = or(-5, 41, 31, 45)
31 = or(46, -2)
32 = or(-4, 59)
33 = and(46, 59)
34 = or(35, 36, 39, 57)
35 = and(9, 42, -3)
36 = or(47, 8, 52)
37 = or(38, 10, -4, -2, 51)
38 = and(42, -9, 54)
39 = or(44, 8)
40 = and(7, 41, 51, 9)
41 = and(47, -8)
42 = or(60, 45, -2, 43, 46)
43 = or(58, -7, -10)
44 = or(-8, 60)
45 = or(2, 54, 57, 52, 10)
46 = and(60, 51, 52)
47 = and(51, -7, 50, 2, 52)
48 = and(55, 50)
49 = or(-7, 2, 50, 59)
50 = and(-8, 4)
51 = and(-2, 8, 57, 53)
52 = and(56, -9, 55, 8, 54)
53 = and(4, 56, 10)
54 = and(58, -3, -9)
55 = and(-7, 5, 3, -8)
56 = or(-10, 59, 3, -2)
57 = or(1, -5, -3, 59, -2)
58 = or(-6, -2, 5)
59 = and(5, 3)
60 = and(-5, 8, -6, -2, 7)
