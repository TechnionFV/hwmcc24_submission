#QCIRFuzz version 0.3
#Namespace(engine='random', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=10, quantifiers=2, quiet=True, seed=1003923195, top_level_quantifier='forall', var_ratio=0.5)
# r UNSAT
#QCIR-G14 60
forall(3, 5, 6, 7, 8)
exists(1, 2, 4, 9, 10)
output(11)
11 = or(21, 32, 20, 51, 55)
12 = or(10, 16, -1, 21, 35)
13 = and(43, 28, 53, -8, 5)
14 = or(-7, 35, 51, 59, 58)
15 = and(33, 44, 40, 3, 57)
16 = and(24, 21)
17 = and(58, 30)
18 = and(6, 21)
19 = or(40, 57, 36)
20 = and(28, 57, 59, -9)
21 = and(-8, 3, 36, 9, 29)
22 = or(56, 24, 4, 36)
23 = or(34, 26)
24 = or(34, 29)
25 = and(31, 37, 5, 58)
26 = or(-2, 42, 41)
27 = or(30, 60, 45)
28 = and(40, 45)
29 = or(7, 57)
30 = or(33, 41)
31 = or(42, 48, 55, 46)
32 = and(47, 49)
33 = and(46, 8, 10, 35)
34 = or(40, 39, -1, 47, 44)
35 = or(38, 54, -10, -5, 43)
36 = and(49, -3, -6, 59, 51)
37 = or(48, 39, -8, 5, 4)
38 = and(4, 43)
39 = and(55, 49, 51, 54)
40 = or(52, 49, 51, 42, 10)
41 = and(10, 60)
42 = or(45, 8)
43 = and(53, 57, 8)
44 = and(8, 10, 47, 56, -7)
45 = or(47, -6, -5, 52, 9)
46 = or(57, 60, 51, 52, 55)
47 = and(-2, 3, 51, 49)
48 = and(53, -7)
49 = or(-6, 2, 55, 59, -4)
50 = or(58, 55, 51, 2, -10)
51 = and(-9, 56, 5)
52 = and(2, 5, 58, 6)
53 = or(5, 59, 60)
54 = and(3, 5, 7, 10, 6)
55 = and(57, -3, -9, 58)
56 = or(-9, 5, 58, 4, 57)
57 = or(3, 59, 58, 1)
58 = and(-3, 59, 60, -5)
59 = or(7, 3)
60 = or(-4, -1, -7, -9, 10)
