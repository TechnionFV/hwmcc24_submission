#QCIRFuzz version 0.3
#Namespace(engine='random', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=10, quantifiers=4, quiet=True, seed=634694477, top_level_quantifier='forall', var_ratio=0.5)
# r UNSAT
#QCIR-G14 60
forall(5, 6)
exists(2, 3, 7, 9)
forall(1, 10)
exists(4, 8)
output(11)
11 = and(23, 49, 9)
12 = and(16, 40, 19)
13 = and(25, 31, 35, 28, 20)
14 = or(18, 19, -7, 32, -10)
15 = or(36, 35, 44, 38, 32)
16 = and(19, 57, 27, 54)
17 = or(26, 46, 36, 50, 38)
18 = or(-9, 51, 45, 27, 56)
19 = or(55, 40, 3)
20 = or(40, 54)
21 = and(40, 42, 28, 6)
22 = or(47, 10, 24, 4)
23 = or(25, -6, 29)
24 = or(9, -4)
25 = or(55, 37, -4, 41)
26 = and(54, 9, 45, 42, 46)
27 = or(30, 35, 46, 57)
28 = and(34, 44)
29 = and(39, 57, 32, 54, 30)
30 = and(37, 51, -2, 6)
31 = or(-1, 33)
32 = or(42, 41, -6)
33 = and(54, 43, 53, 7)
34 = or(40, 56, 54, 35, 47)
35 = and(51, -4, 47)
36 = and(40, 48, 58, 52)
37 = and(-1, 42)
38 = or(52, 47, 53, 50)
39 = or(6, 50, 57, 4, 5)
40 = or(3, 57, 50)
41 = or(-10, 42, 53, 47)
42 = and(54, 9, 10)
43 = or(46, 48)
44 = or(55, 45, 56, 58)
45 = and(54, -4)
46 = and(49, 54, -1)
47 = or(-5, 52, 59)
48 = or(3, 55)
49 = or(52, -1, -10, 57)
50 = and(-1, 59, 51, 56, 53)
51 = and(3, -4, 60, 7, 10)
52 = and(3, -2, 55, 56)
53 = or(54, -4, -3)
54 = or(60, -6)
55 = or(5, -9, -8)
56 = or(2, -6, -5)
57 = and(4, 9, -2, -6, 5)
58 = and(60, 7, 3)
59 = or(-7, 6, -2, 8)
60 = or(-5, -3)
