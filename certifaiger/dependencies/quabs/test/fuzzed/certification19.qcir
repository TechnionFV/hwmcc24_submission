#QCIRFuzz version 0.3
#Namespace(engine='random', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=20, quantifiers=4, quiet=True, seed=251189358, top_level_quantifier='forall', var_ratio=0.5)
#r UNSAT
#QCIR-G14 70
forall(2, 5, 9, 12, 18, 19)
exists(3, 10, 14, 20)
forall(1, 8, 16, 17)
exists(4, 6, 7, 11, 13, 15)
output(21)
21 = or(12, 57, 1, 45, 25)
22 = or(36, 30, 64)
23 = and(68, 26, 49)
24 = and(65, 50)
25 = and(26, 41, 48)
26 = or(45, 17, 70, 5)
27 = or(19, 68, 70)
28 = and(8, 36, 69, 31, 68)
29 = or(43, -6, 66, 36)
30 = or(41, 44, 53)
31 = or(-16, 51)
32 = and(61, 70, 52)
33 = and(67, 5)
34 = and(18, -16, 11, 7, 20)
35 = and(62, 10, 50)
36 = and(-13, 55, 62)
37 = or(69, 56, 18, -12)
38 = and(45, -2)
39 = and(49, 12, 55, 40)
40 = or(47, 41, 18, 69, 62)
41 = or(47, 59, 58, 16)
42 = or(-5, 13, 14)
43 = and(57, 56, 70, 44)
44 = and(-7, -11, 58, 64)
45 = and(51, -9, -12, -13)
46 = and(3, 57, 61, 15)
47 = and(-17, -20)
48 = or(3, 68, 64, -18, 70)
49 = or(55, -1, 68, 64)
50 = or(1, -8, 70, 17, 19)
51 = or(60, -4, -18, 58, -20)
52 = or(61, 9, -13)
53 = and(61, 68, 18)
54 = and(-19, -7)
55 = or(59, 60, 65)
56 = and(69, 62)
57 = and(-6, -18, -17)
58 = and(66, 69, 6, 63)
59 = and(-19, 3, 60, 6, -10)
60 = or(-13, 62, 20, 7)
61 = or(9, 65)
62 = or(-19, 69, 4, 13)
63 = and(-18, 17, 66)
64 = or(20, -2, 70, -17)
65 = and(-1, 67, 12, -10, 18)
66 = and(1, 68, 6)
67 = and(70, -16, 15, -4, -6)
68 = and(-17, 19, 11, 8, -20)
69 = or(-7, 10, 17, 3, -4)
70 = and(-16, -14)
