#QCIRFuzz version 0.3
#Namespace(engine='levels', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=10, quantifiers=4, quiet=True, seed=580037714, top_level_quantifier='forall', var_ratio=0.5)
# r UNSAT
#QCIR-G14 60
forall(4, 5, 10)
exists(1, 6, 8)
forall(2, 3)
exists(7, 9)
output(11)
11 = and(49, 32, 13)
12 = or(-6, -10, -8, 3, -5)
13 = and(28, 19, 23, 51, 42)
14 = and(6, 2, -4, -1)
15 = and(5, 6)
16 = or(2, -1)
17 = and(52, 47, 37, 21, 23)
18 = or(55, 45, 14)
19 = or(59, 31, 29, 50, 27)
20 = or(41, 26, 52)
21 = and(27, 29, 54)
22 = or(-6, -4, 7, -2, 5)
23 = or(60, 54, 18)
24 = and(48, 57, 40, 33)
25 = or(21, 52, 42, 23, 51)
26 = or(54, 59, 30)
27 = and(36, 12)
28 = or(24, 31)
29 = and(55, 22, 35)
30 = or(46, 55, 15, 16, 14)
31 = and(39, 15, 36)
32 = and(26, 19, 28, 42)
33 = and(-5, 2)
34 = and(-2, 4, -5)
35 = or(1, 5, 7, -3)
36 = or(-10, -1, 8, 4, -6)
37 = and(59, 50, 24)
38 = and(-6, 5, -1, -2)
39 = or(4, 1, -2, -8)
40 = and(-1, -6, -3)
41 = or(18, 59, 54, 30, 27)
42 = and(30, 60)
43 = or(-7, -1, -8)
44 = or(-1, 3, 8, 5, -2)
45 = or(-1, -9, 7, 8)
46 = and(-8, -4, 6, 10, -5)
47 = and(24, 31)
48 = or(3, 6)
49 = or(47, 28, 37)
50 = or(36, 44, 39, 35)
51 = or(24, 29, 54, 60)
52 = and(60, 27, 50, 30)
53 = or(23, 52, 37, 19, 51)
54 = and(57, 12)
55 = or(-2, 9, -7, 10, -4)
56 = and(26, 28, 41, 19, 47)
57 = or(-2, -8, -10, 9)
58 = and(-5, 6, 1, -4, 3)
59 = and(16, 39, 46)
60 = or(22, 43, 46)
