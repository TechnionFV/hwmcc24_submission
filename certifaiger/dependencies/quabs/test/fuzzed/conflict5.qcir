#QCIRFuzz version 0.3
#Namespace(engine='random', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=10, quantifiers=4, quiet=True, seed=381800068, top_level_quantifier='forall', var_ratio=0.5)
# r UNSAT
#QCIR-G14 60
forall(3, 4, 8)
exists(1, 2, 5, 6, 7)
forall(9, 10)
exists()
output(11)
11 = or(55, -4, 19)
12 = and(7, 49, 25, 45, 1)
13 = and(22, 14, 51, 55)
14 = and(40, 6, 56)
15 = or(47, 45, 39, 35)
16 = and(17, 20)
17 = or(60, 57, 30, 28)
18 = or(33, -4, 55, 29)
19 = or(46, 37)
20 = and(8, 52, 32, 38, -1)
21 = or(49, 27, 46, 41, 53)
22 = or(58, 6, 54, 55, 31)
23 = and(-5, 59, 46, 24)
24 = and(47, -10, 43)
25 = or(-9, 40, 29, 27, 31)
26 = and(47, 42, -5)
27 = or(-8, 5, 46)
28 = and(54, 49, 3)
29 = or(44, 60)
30 = or(33, 42, 60)
31 = or(41, 60, 54)
32 = or(34, -9)
33 = or(10, -9, 1, 42)
34 = and(51, 58, 50, 1, 54)
35 = and(55, 38, 49, 37)
36 = or(46, 45, 39, 54)
37 = and(39, 40, 50, 59)
38 = or(5, 2)
39 = or(1, 54)
40 = or(53, 48)
41 = or(9, 47, 60, 50)
42 = and(45, 51, -5, 59, 58)
43 = or(2, 47)
44 = or(-4, 46, 47)
45 = and(53, 52)
46 = and(59, -2, 56, 47, -7)
47 = or(-9, 50)
48 = or(-4, 9, 51, 8)
49 = or(4, 53, 59)
50 = and(10, 59)
51 = or(57, 6)
52 = or(59, 54, 60, 9, -7)
53 = or(-3, -1, -2, 60)
54 = or(60, 6, -9)
55 = or(-4, 60)
56 = and(58, -3, 4, 10, 9)
57 = or(4, 60, -10, 3, -1)
58 = or(8, 60)
59 = or(-4, 5, -6)
60 = and(3, 2, -10, 4, 1)
