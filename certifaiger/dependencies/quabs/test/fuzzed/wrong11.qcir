#QCIRFuzz version 0.3
#Namespace(engine='random', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=10, quantifiers=4, quiet=True, seed=93437, top_level_quantifier='forall', var_ratio=0.5)
# r UNSAT
#QCIR-G14 60
forall(2, 6, 7, 9)
exists(3)
forall(8)
exists(1, 4, 5, 10)
output(11)
11 = and(12, 19)
12 = or(29, 35, 33, 15)
13 = or(49, -9)
14 = and(59, 3, 19, 45)
15 = and(49, 57, 24)
16 = and(20, 32)
17 = or(53, 59, 52, -8)
18 = or(44, 38)
19 = or(24, 27, 54, 53, 26)
20 = or(48, 23, 49, 25, -7)
21 = or(60, 49)
22 = or(37, 47, 39)
23 = or(32, 42)
24 = or(32, -2, -10, 35)
25 = and(26, 55, 36)
26 = and(47, 54)
27 = or(40, 4, 52, 36)
28 = and(52, 34, 56, 2)
29 = or(53, 35, 50, -7)
30 = and(52, 58, 4, 57)
31 = or(57, 37, 40, 34, 10)
32 = and(48, -4)
33 = or(57, -7, 6, 40)
34 = and(-7, 35, 40, 43, 42)
35 = and(2, 47, -5)
36 = or(42, -5, 49, -4, 48)
37 = and(-5, 46)
38 = or(49, -6, -2, 39)
39 = or(10, 40, 9, 59)
40 = and(-8, 10)
41 = or(56, 3, 7, 59)
42 = or(57, 60, 56, 6)
43 = and(54, 51, -10, 55)
44 = and(52, 59)
45 = or(48, 49, 54)
46 = and(58, 53, 6)
47 = or(48, -5, 51, -1, -3)
48 = and(55, -3, 9, 50)
49 = or(2, 53, 50, 58)
50 = and(55, 3, -4, -9, 51)
51 = and(59, -7, -2, 57)
52 = and(53, -9, 4)
53 = and(-4, -9, 7, 59, -3)
54 = or(4, 1, 56, -7)
55 = or(6, 8, 9)
56 = and(-5, -7)
57 = and(-10, 4, -9, 1, 6)
58 = or(60, -7, -5)
59 = or(-6, 1, 3)
60 = or(6, -5, -3, -9)
