#QCIRFuzz version 0.3
#Namespace(engine='levels', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=20, quantifiers=4, quiet=True, seed=55008445, top_level_quantifier='forall', var_ratio=0.5)
#r SAT
#QCIR-G14 70
forall(1, 5, 8, 10, 14, 18)
exists(7, 9, 16, 17)
forall(2, 4, 11, 19)
exists(3, 6, 12, 13, 15, 20)
output(21)
21 = and(64, 56, 62, 47)
22 = and(48, 46, 70, 32)
23 = and(70, 30, 46, 63, 48)
24 = or(50, 41)
25 = or(37, 55, 33, 35)
26 = or(70, 52, 30, 50, 63)
27 = or(33, 35)
28 = or(14, 5)
29 = and(53, 35, 58, 34)
30 = and(39, 27, 42, 29, 45)
31 = or(-18, 8, 16, -6)
32 = or(59, 67, 68, 60, 27)
33 = and(-14, 12, -4, -13)
34 = or(16, -14, 3, 10, -18)
35 = or(-16, 10, 2, -1, 18)
36 = and(57, 34, 35, 31, 53)
37 = or(13, 9, -7)
38 = and(69, 35, 34, 53)
39 = and(53, 35, 37, 31)
40 = or(69, 34, 33)
41 = and(60, 45)
42 = or(55, 33, 37)
43 = and(66, 69)
44 = and(31, 28, 33)
45 = or(69, 66, 58, 53)
46 = or(51, 36)
47 = or(41, 32, 52)
48 = or(51, 44, 38, 45)
49 = or(70, 50, 30)
50 = or(29, 25, 45, 44)
51 = or(55, 53, 66, 57, 28)
52 = and(25, 51)
53 = and(-15, 17)
54 = and(30, 32, 50)
55 = and(-20, 16)
56 = and(70, 63, 48, 50)
57 = or(-5, 16, -3)
58 = or(10, 4, -2)
59 = or(53, 66, 37)
60 = or(33, 35)
61 = or(46, 63)
62 = or(70, 32)
63 = or(36, 29, 67)
64 = or(52, 63)
65 = and(41, 46, 32, 30, 63)
66 = and(-9, 20, -11, 5, 15)
67 = and(53, 34, 69)
68 = and(58, 53, 28, 35, 33)
69 = or(6, -12)
70 = and(45, 67, 60)
