#QCIRFuzz version 0.3
#Namespace(engine='random', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=20, quantifiers=4, quiet=True, seed=500992496, top_level_quantifier='forall', var_ratio=0.5)
# r SAT
#QCIR-G14 70
forall(1, 3, 4, 5, 9, 10, 15)
exists(2, 12, 14, 18)
forall(7, 17, 19)
exists(6, 8, 11, 13, 16, 20)
output(21)
21 = or(31, 30)
22 = and(39, 42, 40)
23 = or(46, 39, -6, 12)
24 = or(58, 51, 65)
25 = or(66, 49)
26 = and(28, -16, 54, 51)
27 = or(44, -4, 68, -3)
28 = or(68, 64, 62)
29 = and(31, 65, 50, 53)
30 = and(11, -10, 6, 59, -17)
31 = and(-2, 33)
32 = or(44, -1, 63)
33 = and(39, 37, 61, 12)
34 = or(61, -15, 40, 41, 37)
35 = and(-11, 63, -13, 49)
36 = or(55, 57, 44, 16, 70)
37 = and(51, 68, 12, 61)
38 = and(39, 64, 51, 41)
39 = or(-11, 54)
40 = and(63, 8, 9, -20, 62)
41 = and(45, 67, 4)
42 = and(55, 53)
43 = or(8, 70)
44 = and(7, 60)
45 = or(52, 68, 8)
46 = or(-20, 67, 68)
47 = or(16, 52, 60, 48)
48 = or(68, 3)
49 = and(59, 63, 57, 55, 12)
50 = or(-1, -11)
51 = or(-16, 67, 54, -4, 69)
52 = or(69, 55, 64)
53 = and(-10, 19, 65)
54 = or(56, 4, 10)
55 = or(-9, 20)
56 = and(-1, 3, 2, 4, 64)
57 = or(-13, 60, 9)
58 = or(1, 68)
59 = or(-5, 17, -14, 64, 65)
60 = or(62, -15, 64, 7)
61 = or(64, 68)
62 = or(-19, 12, 10, 70, 68)
63 = and(17, 67, -1, 5, 66)
64 = and(-10, -7, -5, -11, -18)
65 = or(69, -13, -7)
66 = and(-3, -7, -11, 20, -18)
67 = and(-6, 2)
68 = or(-2, 10, -12, -8, -7)
69 = or(5, -10, 4, 7)
70 = and(-2, 5, -17, 15, -3)
