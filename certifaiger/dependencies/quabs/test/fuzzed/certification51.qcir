#QCIRFuzz version 0.3
#Namespace(engine='levels', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=20, quantifiers=4, quiet=True, seed=538589139, top_level_quantifier='forall', var_ratio=0.5)
#r SAT
#QCIR-G14 70
forall(1, 2, 6, 8, 12, 19)
exists(3, 9, 10, 11, 13, 14)
forall(4, 5, 20)
exists(7, 15, 16, 17, 18)
output(21)
21 = and(66, 50)
22 = or(7, 19, -12)
23 = and(39, 36, 70, 61)
24 = or(-13, -1, 6)
25 = and(29, 24)
26 = or(35, 32, 69, 67, 36)
27 = or(28, 32, 64)
28 = or(34, 57, 59, 56, 45)
29 = or(10, -20, 19)
30 = and(32, 35, 70, 61, 36)
31 = and(65, 47, 44, 46)
32 = or(45, 59, 31, 53)
33 = and(70, 28, 39, 69, 67)
34 = and(43, 48, 42, 52, 41)
35 = or(25, 59, 56, 58)
36 = or(59, 45)
37 = and(35, 39, 64, 67, 28)
38 = or(28, 60, 64, 70, 67)
39 = or(68, 49, 53, 45, 56)
40 = or(67, 69, 36, 39, 35)
41 = or(13, 7)
42 = and(-10, -20)
43 = or(-9, 6, 7)
44 = or(6, 15, -7, -8)
45 = and(46, 65, 41, 47)
46 = and(12, -17, -7)
47 = or(2, -17, -7, 12, -8)
48 = or(19, -3, 6, -14)
49 = and(41, 24, 48, 47)
50 = or(60, 61)
51 = and(61, 60, 39, 32, 28)
52 = or(2, -12, 9)
53 = and(22, 44, 41, 65)
54 = or(39, 36, 60, 69)
55 = and(32, 64, 35, 60, 67)
56 = and(43, 44, 52, 65)
57 = and(48, 44)
58 = and(52, 41, 22, 24)
59 = and(43, 24, 46)
60 = and(53, 58, 56)
61 = and(34, 45, 31, 25)
62 = or(35, 32)
63 = or(69, 60, 64)
64 = and(68, 57)
65 = or(13, -19, 10, -5, 20)
66 = or(60, 32, 35, 64)
67 = and(57, 56)
68 = and(24, 44, 48)
69 = or(25, 31, 57)
70 = or(58, 56)
