#QCIRFuzz version 0.3
#Namespace(engine='random', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=10, quantifiers=4, quiet=True, seed=185364779, top_level_quantifier='forall', var_ratio=0.5)
# r UNSAT
#QCIR-G14 60
forall(7, 9)
exists(1, 2, 10)
forall(3, 5, 8)
exists(4, 6)
output(11)
11 = and(51, 47, 41, 32)
12 = or(53, 60)
13 = or(-7, 25, 42)
14 = or(35, 1, 40, 42, 15)
15 = or(27, 33, 48)
16 = or(46, 28)
17 = or(39, 22, 58)
18 = or(24, 37, 20, -6)
19 = and(-4, 39, -7)
20 = or(50, -3)
21 = and(58, 60)
22 = and(34, 30, 23)
23 = and(49, 59, 48)
24 = and(30, 26)
25 = and(35, 30, 36, 59)
26 = or(53, 33, 40, -6)
27 = and(37, -10, 55, -9)
28 = and(-4, 3, 56, 59)
29 = and(9, 46, 3)
30 = and(43, 8)
31 = and(48, 42, 34)
32 = or(59, 54, 53)
33 = and(5, 41, 55, -7)
34 = or(42, 36, 35, -6, 43)
35 = or(53, -9, 58)
36 = or(50, 47, 48, 58)
37 = and(48, 52, 40, 50)
38 = and(1, 49, 2)
39 = and(60, 49, -1)
40 = and(58, 54, 43, 60)
41 = or(-3, 2)
42 = or(50, 10)
43 = and(58, -7, -4, -10)
44 = and(-4, 52, 8, 55)
45 = or(52, 50, -6)
46 = and(60, 57, 7, 54, 56)
47 = or(55, -3, 4, 51, 54)
48 = or(9, 50, 60)
49 = or(-1, 54)
50 = or(6, 10, -9, 56)
51 = or(-10, -4, 55)
52 = or(59, 56)
53 = and(3, -5)
54 = and(56, -6, 60, 9, 57)
55 = and(56, -10, 3)
56 = or(3, -9, -5, 4, 7)
57 = or(-1, 60, 3, 4, 58)
58 = and(7, 4, -9, -2, 5)
59 = and(3, 4)
60 = or(-9, -2, -8, -6, -7)
