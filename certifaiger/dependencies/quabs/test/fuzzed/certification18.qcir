#QCIRFuzz version 0.3
#Namespace(engine='levels', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=20, quantifiers=4, quiet=True, seed=938023896, top_level_quantifier='forall', var_ratio=0.5)
#r UNSAT
#QCIR-G14 70
forall(4, 6, 8, 11, 16)
exists(1, 2, 9, 13, 14, 18, 19)
forall(5, 10, 12, 15, 17, 20)
exists(3, 7)
output(21)
21 = or(67, 61)
22 = and(-3, 1, -11, -20, -16)
23 = and(26, 50)
24 = or(11, -2, -16, -18, -4)
25 = and(34, 26, 50, 58)
26 = or(64, 31, 45, 48, 68)
27 = and(52, 50, 30, 34, 47)
28 = or(20, -12, -14)
29 = and(58, 35, 52)
30 = or(32, 38, 48, 31, 68)
31 = or(28, 69, 70)
32 = or(66, 65, 62, 70)
33 = or(55, 22, 69)
34 = or(32, 64)
35 = and(41, 64, 32, 31)
36 = or(52, 35, 50)
37 = and(4, 12, 16, 5)
38 = or(37, 24, 55, 57, 22)
39 = or(30, 26, 47, 34, 54)
40 = and(54, 30, 26, 47, 50)
41 = or(59, 62, 66, 37, 28)
42 = or(58, 50, 26, 34, 52)
43 = or(22, 66, 24, 55)
44 = or(34, 58, 52)
45 = or(24, 57)
46 = and(26, 34, 52)
47 = or(68, 56, 38)
48 = or(55, 37, 59, 22)
49 = or(54, 35, 34, 58)
50 = and(48, 53, 31)
51 = and(62, 22, 24, 59, 37)
52 = and(41, 33, 32, 64)
53 = or(37, 65, 24)
54 = and(51, 45, 64, 48)
55 = or(12, -4, -16)
56 = or(28, 65, 66, 24, 59)
57 = and(14, 3, -13, -11, 5)
58 = or(53, 43, 48)
59 = and(-5, 15)
60 = or(52, 34, 54, 26, 30)
61 = or(54, 50)
62 = or(-1, -11, -10, 7)
63 = and(35, 26, 58, 54)
64 = and(65, 70)
65 = or(-19, 6, 10)
66 = or(-10, 18, 12, 2)
67 = and(34, 58, 47, 54, 52)
68 = and(57, 65, 66, 37)
69 = and(14, 18)
70 = and(14, 6)
