#QCIRFuzz version 0.3
#Namespace(engine='levels', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=20, quantifiers=4, quiet=True, seed=779314440, top_level_quantifier='forall', var_ratio=0.5)
#r SAT
#QCIR-G14 70
forall(18)
exists(4, 9, 10, 11, 12, 19, 20)
forall(1, 3, 5, 8, 13, 16)
exists(2, 6, 7, 14, 15, 17)
output(21)
21 = and(54, 26, 31)
22 = or(60, 29, 30, 27)
23 = and(46, 62, 68, 69)
24 = and(-9, -11, -3, 14)
25 = or(2, 3)
26 = and(50, 22, 33)
27 = and(62, 65, 46)
28 = or(49, 50, 44, 22)
29 = or(53, 63, 37, 25, 62)
30 = and(65, 37, 68, 63, 69)
31 = and(33, 66, 61, 44)
32 = or(24, 43, 62)
33 = and(36, 38, 52)
34 = or(70, 60)
35 = and(61, 66, 44)
36 = or(68, 37, 41, 46, 69)
37 = and(8, -15)
38 = or(68, 62, 41, 65)
39 = or(61, 47, 34, 66)
40 = and(25, 46, 65, 24, 62)
41 = or(16, -1, -14, 5, 11)
42 = and(61, 47, 50, 66, 34)
43 = or(-20, 9, 15, 4)
44 = or(40, 30, 29, 52, 55)
45 = or(61, 44, 47, 34, 50)
46 = and(2, 1, 19, 13)
47 = and(36, 27, 57, 32, 38)
48 = or(47, 34)
49 = or(67, 27, 60, 70, 23)
50 = or(27, 55, 23)
51 = and(22, 44)
52 = and(63, 41, 69, 65)
53 = or(-4, 3)
54 = or(44, 50)
55 = or(53, 24, 63, 65)
56 = or(61, 34)
57 = and(43, 37)
58 = and(33, 66)
59 = or(53, 62, 37)
60 = and(62, 43, 53, 69)
61 = and(52, 29, 36, 32, 59)
62 = or(14, -8)
63 = or(1, -5, 20, 16)
64 = and(33, 22, 66, 34)
65 = or(-17, -2, -10, 9)
66 = and(29, 36)
67 = or(62, 46, 43, 63, 65)
68 = or(14, 13, -10)
69 = or(6, -1)
70 = and(68, 69, 46)
