#QCIRFuzz version 0.3
#Namespace(engine='random', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=10, quantifiers=4, quiet=True, seed=898163744, top_level_quantifier='forall', var_ratio=0.5)
# r UNSAT
#QCIR-G14 60
forall(1, 2)
exists(7, 9)
forall(5, 8)
exists(3, 4, 6, 10)
output(11)
11 = and(27, 47, 39, 32)
12 = and(59, 30, 37, 2)
13 = or(37, 22, 56, 60)
14 = and(57, 26, 49, 20)
15 = and(48, 42)
16 = or(33, -10, 38, 25, 29)
17 = and(44, 56, 58)
18 = or(52, 44)
19 = and(29, 4)
20 = and(46, 32, 26, 37, 41)
21 = and(49, 50, 35)
22 = or(51, 47, 46, 42, 56)
23 = and(7, 4, 40)
24 = and(49, 27)
25 = or(38, 35, 47)
26 = or(27, 32, 60)
27 = or(44, 45)
28 = and(45, 34, 60, -6)
29 = and(31, 8, 51, 53, 35)
30 = or(33, 44, 45, 6, 60)
31 = or(32, -8, 55, 49, 37)
32 = or(8, 52, 58, 51)
33 = and(53, 35, 40, 50)
34 = or(43, -8)
35 = and(3, 56, 36, 47)
36 = and(1, 42, -9, 55, 51)
37 = and(47, 45, 42, 55, 58)
38 = or(39, -4, 2, 50)
39 = or(47, 48, 50, 45, 52)
40 = or(-5, -6, 49, 54, -7)
41 = and(54, 45)
42 = and(10, 47, -1)
43 = or(53, 59)
44 = or(52, 1, 50, 47, 51)
45 = or(49, 51)
46 = or(59, 5, -3)
47 = and(50, -8, -5)
48 = and(9, 2, -3, 56)
49 = and(-3, 6, -4, 59)
50 = or(59, -9)
51 = and(57, -1, 54, 58, -5)
52 = or(3, 60)
53 = or(-3, 7)
54 = and(-7, 60, 4)
55 = and(-4, -1, -8)
56 = and(57, 5, -6)
57 = or(-9, -1, -3, 10, 60)
58 = and(10, 2, -7, 5)
59 = and(8, 10)
60 = and(-2, 1, -9, -3, 10)
