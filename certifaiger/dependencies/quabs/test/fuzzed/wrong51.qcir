#QCIRFuzz version 0.3
#Namespace(engine='random', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=10, quantifiers=2, quiet=True, seed=119574672, top_level_quantifier='forall', var_ratio=0.5)
# r UNSAT
#QCIR-G14 60
forall(1, 2, 3, 4, 5, 6, 9, 10)
exists(7, 8)
output(11)
11 = or(16, 15, 20)
12 = and(41, 18, 8, 59)
13 = and(50, 8, -2)
14 = and(50, 18)
15 = and(45, 17, -7, 28)
16 = or(40, 45, 58, 39, 29)
17 = or(46, 36, 49, 45)
18 = or(58, 19, 27)
19 = and(43, 41, -7)
20 = or(35, 31, 53)
21 = and(33, -5, 53, -8, 60)
22 = or(41, 43, 34, 10)
23 = or(49, 59, 55, 43, 26)
24 = and(42, 50)
25 = and(45, 26, 34, 52, 41)
26 = or(56, 27, 51, 58, -3)
27 = and(31, 33, -10, 52)
28 = or(59, 43, 4, 49, 50)
29 = and(5, 42, 41, 59)
30 = and(6, 32)
31 = and(33, 38, 5)
32 = or(47, 39, 10)
33 = or(45, 52, 40, 36, -1)
34 = and(52, -9)
35 = or(60, 38, 36)
36 = and(40, 48, 45)
37 = or(58, 47)
38 = or(3, 44)
39 = and(-10, 52, 54, 58)
40 = and(-10, -1)
41 = or(4, -8, 42, 52, 51)
42 = or(-9, 55, 43, -5)
43 = or(-9, 10)
44 = and(10, 46, 52)
45 = and(4, -1, 50)
46 = or(50, 7)
47 = or(1, 56)
48 = or(55, 59, 50, 3)
49 = or(2, 52, 54, 53)
50 = and(-1, 55, -4)
51 = and(55, 7)
52 = and(60, 53, 10, 9, 3)
53 = and(8, 56, 2)
54 = and(7, -2, 55, 8)
55 = and(57, -5, -1, 58, 9)
56 = and(4, -3, 1, 2, 58)
57 = and(-1, 2, 8)
58 = and(59, 2)
59 = and(6, 60)
60 = or(-6, -2, 4)
