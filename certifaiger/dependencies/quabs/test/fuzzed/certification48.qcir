#QCIRFuzz version 0.3
#Namespace(engine='levels', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=20, quantifiers=4, quiet=True, seed=215436372, top_level_quantifier='forall', var_ratio=0.5)
#r SAT
#QCIR-G14 70
forall(2, 6, 9, 13, 19, 20)
exists(4, 14, 17)
forall(3, 5, 8, 10, 15, 16, 18)
exists(1, 7, 11, 12)
output(21)
21 = and(63, 52)
22 = and(43, 49, 65, 66)
23 = and(42, 38, 70)
24 = or(38, 49, 55)
25 = and(65, 55)
26 = and(58, 32, 27, 34)
27 = or(28, 48)
28 = and(47, 49)
29 = and(37, 58, 44)
30 = or(49, 42, 66, 68)
31 = and(48, 28, 50)
32 = and(67, 41)
33 = and(58, 44)
34 = and(28, 40, 22, 25)
35 = and(53, 38, 43, 49)
36 = and(41, 25, 23, 28)
37 = or(22, 67, 51, 41, 28)
38 = and(17, -7, 3)
39 = or(66, 53)
40 = or(43, 49, 66, 68)
41 = and(47, 65, 53, 55, 70)
42 = or(13, 17, -4)
43 = or(8, -2, 10)
44 = or(67, 35, 41, 48, 23)
45 = or(22, 50, 35, 67)
46 = or(4, -1, -13, 10, 12)
47 = and(-3, -2)
48 = or(49, 68, 53)
49 = or(-17, 8)
50 = and(68, 55, 53, 49, 46)
51 = and(38, 70, 46)
52 = or(56, 45, 32, 37)
53 = and(-12, 2, 19, -11)
54 = or(60, 37)
55 = or(-10, 18)
56 = or(23, 41)
57 = and(31, 37, 34)
58 = and(48, 39, 51)
59 = or(30, 23, 51)
60 = and(30, 23, 24, 35)
61 = and(31, 37, 44, 56, 60)
62 = and(45, 58, 32, 44)
63 = or(36, 45, 31, 27, 58)
64 = and(36, 31, 56, 27)
65 = or(3, -6, -11)
66 = or(11, -19, 16)
67 = and(46, 49, 66)
68 = and(-6, -8, -7)
69 = and(32, 44)
70 = or(10, -11, -12, -18, 7)
