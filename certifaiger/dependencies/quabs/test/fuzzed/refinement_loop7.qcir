#QCIRFuzz version 0.3
#Namespace(engine='levels', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=10, quantifiers=4, quiet=True, seed=356018330, top_level_quantifier='forall', var_ratio=0.5)
# r UNSAT
#QCIR-G14 60
forall(10)
exists(3, 6)
forall(1, 4, 7, 8)
exists(2, 5, 9)
output(11)
11 = and(23, 20, 25)
12 = and(-3, -8, -9, -5, 2)
13 = or(2, 4, 1)
14 = or(49, 33, 59, 40, 18)
15 = and(60, 51)
16 = or(-1, -9, -6)
17 = and(33, 18, 31, 26, 38)
18 = or(24, 60, 57)
19 = or(59, 34, 40)
20 = or(21, 19, 53)
21 = or(15, 26, 31, 36)
22 = or(6, -8, 2, 3)
23 = and(21, 19, 14)
24 = and(-9, 2)
25 = or(46, 43, 17)
26 = and(50, 22, 48, 54, 24)
27 = or(59, 18, 36, 26)
28 = or(14, 53)
29 = or(49, 34, 37, 26)
30 = and(42, 24)
31 = and(42, 51, 48)
32 = or(46, 27, 21, 53)
33 = or(22, 54)
34 = or(51, 16, 52)
35 = and(48, 13)
36 = and(13, 58, 56, 16)
37 = and(47, 50, 56, 54)
38 = and(12, 47, 60)
39 = or(12, 50, 42, 60)
40 = and(51, 57, 50, 22, 56)
41 = and(21, 43, 27, 14)
42 = or(9, 1, 6, 8)
43 = or(49, 38)
44 = or(21, 14, 29, 27, 19)
45 = and(19, 46, 17, 14, 21)
46 = or(35, 59, 38)
47 = or(-5, 9, 1, -3)
48 = or(8, -2)
49 = and(58, 48, 16, 24, 22)
50 = or(10, 8)
51 = and(4, -8, 3)
52 = and(4, -10, 8, -7)
53 = or(59, 33, 34)
54 = or(-5, 3, 6)
55 = or(16, 12)
56 = or(4, 9, -3, 10)
57 = and(-6, -4, -9, -3)
58 = or(-6, 7, -1)
59 = and(47, 50)
60 = and(-2, 1, -6, -3)
