#QCIRFuzz version 0.3
#Namespace(engine='levels', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=20, quantifiers=4, quiet=True, seed=660786267, top_level_quantifier='forall', var_ratio=0.5)
# r UNSAT
#QCIR-G14 70
forall(2, 14, 17)
exists(1, 4, 5, 8, 9, 15, 16)
forall(3, 10, 11, 12, 13, 19)
exists(6, 7, 18, 20)
output(21)
21 = and(37, 65)
22 = or(68)
23 = or(-2, -5, 10)
24 = and(10, -19, -6, 7, 15)
25 = and(12, 5, -6)
26 = or(17, 9, -8, 16, 2)
27 = and(-9, -20, -14, 10, 6)
28 = or(33, 51, 64)
29 = and(68)
30 = or(68)
31 = or(61, 51)
32 = or(4, -2)
33 = and(68)
34 = and(20, 5, -16, -8, -17)
35 = and(5, 7, -14, -20)
36 = and(-19, -14, 15, -10)
37 = and(33, 51, 22, 50, 69)
38 = and(-20, -4, -3, 17)
39 = and(30, 29)
40 = or(2, 4, 13)
41 = or(-1, -4, 6)
42 = and(50, 30, 51, 63)
43 = and(50, 30)
44 = or(10, -7, 9)
45 = and(-1, -4)
46 = and(-10, 19)
47 = or(7, -5)
48 = and(70, 33, 63, 50)
49 = or(63, 50, 69, 51, 70)
50 = or(68)
51 = or(68)
52 = and(68)
53 = or(10, 11, -17, 15, -6)
54 = and(52, 33, 30, 70, 29)
55 = or(18, -11, 10)
56 = or(-11, 14, -1, 8)
57 = and(22, 69, 51)
58 = and(-18, -1)
59 = or(-19, 10)
60 = and(17, -4)
61 = and(68)
62 = and(22, 70, 64, 30, 63)
63 = and(68)
64 = and(68)
65 = and(33, 51, 63, 70)
66 = and(-19, -1, 13)
67 = and(5, 4, 19, -16)
68 = and(53, 41, 38)
69 = or(68)
70 = or(68)
