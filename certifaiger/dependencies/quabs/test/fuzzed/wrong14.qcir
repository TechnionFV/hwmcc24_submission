#QCIRFuzz version 0.3
#Namespace(engine='random', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=10, quantifiers=4, quiet=True, seed=712128, top_level_quantifier='forall', var_ratio=0.5)
# r UNSAT
#QCIR-G14 60
forall(2, 10)
exists(1, 3, 5, 7)
forall(9)
exists(4, 6, 8)
output(11)
11 = or(48, 47, 40, 60)
12 = or(33, 57, 46, 37)
13 = or(45, 56, 17, 36, 58)
14 = or(39, 26, 43, 28, 32)
15 = and(28, 31)
16 = or(44, 17, 6, 55, 53)
17 = or(30, 59, 56, 20, -7)
18 = and(34, 22)
19 = or(23, 48)
20 = and(58, 48, 42, 32, 47)
21 = and(58, 10, 44, -5, 56)
22 = or(32, -7)
23 = and(4, 26)
24 = or(7, 35, 44, 54, 42)
25 = or(30, -1, 50, 3, 6)
26 = and(7, 48, 60, 59)
27 = and(51, 46, -4)
28 = or(46, 50, 8)
29 = and(53, 30, 33, 47, 38)
30 = or(46, 54, -9, 53, -5)
31 = and(42, 44)
32 = and(47, 48)
33 = or(3, -2)
34 = or(50, 60)
35 = or(38, 45, 3, 44)
36 = or(-7, 47, 38, 43)
37 = and(-8, 39, 59)
38 = and(-8, 39, 50, 54, 47)
39 = or(56, 4)
40 = and(51, 52, 54, 60, 41)
41 = and(-7, 50, 51, 54)
42 = and(-3, 6, -8, 52, -10)
43 = or(4, 58, 1, 53)
44 = or(5, 7)
45 = and(-9, 2)
46 = or(54, 50)
47 = and(50, 1, 56, 2)
48 = and(50, 56)
49 = or(56, 60, 5, 2)
50 = and(9, 7, -5, -6, -8)
51 = and(-5, -7)
52 = or(59, -3, -4)
53 = and(-7, 58, 55, 56, 9)
54 = and(-3, 2, 58)
55 = and(1, 5, -10, 56)
56 = or(2, 1)
57 = or(60, -3)
58 = and(3, 60, -1, -5, -9)
59 = or(9, -8)
60 = and(4, -2, -5)
