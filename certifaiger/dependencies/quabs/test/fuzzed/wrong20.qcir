#QCIRFuzz version 0.3
#Namespace(engine='random', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=10, quantifiers=4, quiet=True, seed=5886178, top_level_quantifier='forall', var_ratio=0.5)
# r UNSAT
#QCIR-G14 60
forall(9)
exists(3, 5, 8)
forall(1, 6, 7, 10)
exists(2, 4)
output(11)
11 = or(13, 25)
12 = or(49, -7)
13 = and(44, 32, 57, 14, 31)
14 = and(-3, -9)
15 = or(35, 40, 24, 31)
16 = or(40, 56, 30)
17 = or(36, -3, 34, 48)
18 = and(45, 59, -3)
19 = and(46, 42, 2, 6)
20 = and(41, 42)
21 = and(47, 59, 35)
22 = and(4, 29, -9, -10)
23 = and(28, 24, 52)
24 = or(27, 31)
25 = and(46, 45, 33, 44)
26 = or(51, 27, 32)
27 = or(48, 59, 35, 33)
28 = or(35, 40)
29 = or(37, 49, 55, 40, 50)
30 = and(33, -4, 56, -8, 7)
31 = and(40, 45, 43, 57)
32 = and(57, 5, 49)
33 = or(-5, 41, 53, 51, -4)
34 = or(56, 37, 38, 52, 40)
35 = and(39, 41, 56, 58)
36 = and(46, 60, 43, -3, -9)
37 = or(59, 48, 42, -8, 41)
38 = and(-1, 42, 58, 45)
39 = or(47, -6)
40 = and(57, -10, 9, 43)
41 = and(-8, 58, 4, 52)
42 = and(51, 53, -3, 59)
43 = or(-10, 60, 44, -9)
44 = and(-1, 54)
45 = or(60, 57, 50)
46 = or(50, -10, -3)
47 = or(49, 1, 50)
48 = and(60, 5, 7)
49 = and(52, 59, 55, -2, -4)
50 = and(56, -9)
51 = and(54, 56, 60, 4)
52 = or(56, 54, 8)
53 = and(60, -4)
54 = or(6, 58)
55 = and(7, 4)
56 = and(-4, 8, -9, 7)
57 = and(9, 10, 8, 59, 5)
58 = or(5, 1, 8)
59 = and(7, -3)
60 = or(8, 1)
