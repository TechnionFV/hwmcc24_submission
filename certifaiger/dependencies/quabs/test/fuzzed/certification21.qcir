#QCIRFuzz version 0.3
#Namespace(engine='levels', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=20, quantifiers=4, quiet=True, seed=876209458, top_level_quantifier='forall', var_ratio=0.5)
#r SAT
#QCIR-G14 70
forall(1, 18, 20)
exists(3, 4, 5, 9, 12, 15, 16, 17, 19)
forall(2, 6, 10, 13)
exists(7, 8, 11, 14)
output(21)
21 = and(25, 60, 55, 50, 66)
22 = or(39, 46, 65)
23 = or(26, 43, 28)
24 = or(18, 20, -19)
25 = and(26, 33, 28, 37, 43)
26 = or(54, 70, 22, 35, 32)
27 = or(36, 37, 26)
28 = or(67, 68, 61, 54, 57)
29 = and(28, 42, 48, 36, 33)
30 = or(-18, 8)
31 = or(11, 20, -19, -7)
32 = or(69, 49, 59, 39, 64)
33 = and(70, 32, 54)
34 = or(11, 10, 16)
35 = or(59, 31, 63, 47, 34)
36 = and(68, 22, 32, 61, 54)
37 = or(32, 22, 68)
38 = or(43, 40, 37)
39 = or(-10, 13)
40 = and(35, 70, 67)
41 = and(36, 28)
42 = or(54, 35, 70)
43 = or(22, 54, 35, 32, 67)
44 = and(-14, -16, -6)
45 = and(19, 5, -15, -12, -16)
46 = and(8, 9)
47 = and(-5, 20)
48 = and(22, 32, 70, 68)
49 = and(20, 6, -12, -5, 17)
50 = and(37, 33, 26, 36, 28)
51 = or(40, 48, 26)
52 = or(40, 48, 36, 37)
53 = and(28, 40, 37, 36, 48)
54 = or(64, 47, 63)
55 = or(42, 33, 40, 26)
56 = or(-6, 15, -11, 17)
57 = or(49, 59, 34)
58 = or(-1, -6, -7, 5)
59 = and(15, 5, -11)
60 = or(26, 48, 43, 42, 36)
61 = or(63, 58, 30, 34, 47)
62 = or(36, 40, 37, 28)
63 = or(-3, 10, 8, -20)
64 = and(-6, -11)
65 = and(-20, -8, 19, -1, 9)
66 = and(43, 42)
67 = and(69, 63, 49, 47, 64)
68 = and(63, 34, 24)
69 = and(17, -20)
70 = or(69, 58, 46)
