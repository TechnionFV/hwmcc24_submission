#QCIRFuzz version 0.3
#Namespace(engine='levels', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=10, quantifiers=4, quiet=True, seed=189882463, top_level_quantifier='forall', var_ratio=0.5)
# r UNSAT
#QCIR-G14 60
forall(4, 8, 9)
exists(3, 5, 7)
forall(1, 2, 6)
exists(10)
output(11)
11 = or(48, 25, 31)
12 = or(10, -8, -3)
13 = and(-8, -3, 2)
14 = and(12, 42)
15 = and(24, 51, 32)
16 = or(15, 39, 28, 40)
17 = or(47, 36)
18 = or(-9, -10, 7, 5, 2)
19 = and(-3, -7, -5, 8, -4)
20 = or(-4, 7, -5, -8, 10)
21 = or(45, 51, 53, 58)
22 = and(-10, 6, -8, 7)
23 = or(-5, 7, -1, -3)
24 = and(42, 18)
25 = and(39, 21, 38, 28)
26 = or(38, 39, 21)
27 = and(20, 42, 34, 12)
28 = and(43, 17, 58, 51, 53)
29 = or(6, -5)
30 = and(35, 23, 22, 60, 19)
31 = or(33, 28, 39)
32 = or(35, 47)
33 = or(51, 58, 24, 14)
34 = and(6, -7, -10)
35 = and(-3, -9, 1, -2, -6)
36 = and(4, 10, 3)
37 = and(12, 13)
38 = and(51, 32, 37, 24)
39 = or(45, 30, 58, 24)
40 = or(52, 51, 14, 55)
41 = and(50, 27, 51)
42 = or(-2, -6, -4)
43 = and(42, 19, 13)
44 = and(2, -1, -7, -6, -3)
45 = and(23, 42, 36, 12, 19)
46 = and(33, 21, 28, 38, 15)
47 = or(-1, 9)
48 = or(40, 39, 38)
49 = or(21, 15, 33, 41)
50 = and(22, 35, 12)
51 = or(44, 19)
52 = and(47, 12, 29)
53 = or(44, 36, 13, 35, 20)
54 = or(60, 18, 44, 23, 13)
55 = and(42, 47, 13, 12)
56 = and(18, 13, 12, 42, 47)
57 = or(40, 38, 41, 15, 21)
58 = and(29, 42)
59 = or(33, 38)
60 = or(-1, 7, -8, -5)
