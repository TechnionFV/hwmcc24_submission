#QCIRFuzz version 0.3
#Namespace(engine='random', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=10, quantifiers=4, quiet=True, seed=645490154, top_level_quantifier='forall', var_ratio=0.5)
# r UNSAT
#QCIR-G14 60
forall(8, 10)
exists(2, 3, 4, 5)
forall(6, 7)
exists(1, 9)
output(11)
11 = or(28, 36, 14, 50)
12 = or(18, 60, 55)
13 = and(53, 44, 43, 23)
14 = and(50, 38)
15 = or(-2, 54, 18)
16 = and(40, 28, 51)
17 = and(8, 35, 1, 43)
18 = or(50, 9, 45, 39)
19 = or(59, 32, 47, 53, 58)
20 = and(-10, 45, 57, 27, 32)
21 = or(-6, 58, 33, -7)
22 = and(9, 28, 48)
23 = and(34, 48, 46, 45)
24 = and(57, 29)
25 = and(28, 27)
26 = or(59, 29)
27 = or(45, 55, 51, 35)
28 = and(50, 54, 10, 58)
29 = and(44, 50, 47, 43, 37)
30 = or(-9, 50, 57)
31 = and(57, 32, 51, 52)
32 = and(-4, 56, -8, 10)
33 = and(10, 40, 9, 52)
34 = or(3, 56, 42, 1)
35 = and(44, 56, 60, 48)
36 = and(50, 53, 51, 5, 43)
37 = and(47, 2, 7)
38 = and(44, 47)
39 = or(52, -1, 43, -2)
40 = and(44, -10, 45, 52)
41 = and(53, 57, -10, -3)
42 = and(4, 55, -5, -2, 7)
43 = or(9, 58, -8)
44 = or(45, 59, 5, -6, 47)
45 = or(53, 60)
46 = and(50, -2, 47, 51, -3)
47 = and(-5, -4)
48 = or(10, -5, 54, 3, 60)
49 = and(-2, 51, -4, 5)
50 = and(55, 2, 54, 56)
51 = and(59, 3)
52 = or(55, 58, 8, 9)
53 = or(60, 54, 6, 8, -9)
54 = or(60, -1, -5, -3)
55 = or(-8, 6)
56 = or(10, 59)
57 = or(1, -3)
58 = and(-9, 59, 60)
59 = and(60, -2)
60 = or(-10, 7)
