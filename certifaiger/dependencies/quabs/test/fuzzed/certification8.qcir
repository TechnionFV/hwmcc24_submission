#QCIRFuzz version 0.3
#Namespace(engine='random', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=20, quantifiers=4, quiet=True, seed=952170945, top_level_quantifier='forall', var_ratio=0.5)
# r SAT
#QCIR-G14 70
forall(1, 2, 3, 15, 16, 17)
exists(10, 11, 19)
forall(7, 9, 12, 13, 14, 18)
exists(4, 5, 6, 8, 20)
output(21)
21 = and(45, 23)
22 = or(32, -3, 64, -18, 61)
23 = or(12, 46, 32, 65, 1)
24 = or(70, 58, 35)
25 = and(61, 44, 28, 38, -13)
26 = and(5, -10)
27 = and(-20, 5, 57)
28 = or(-19, 38)
29 = or(69, 7, 38, 63, 66)
30 = or(33, 6, -19, 57, 65)
31 = and(67, 19, 65, 54, 64)
32 = or(-9, -15, 47, 34, 57)
33 = or(15, 55)
34 = or(49, 44)
35 = and(62, 44)
36 = and(65, 1)
37 = or(39, 48, 70, 46, 41)
38 = and(63, 70, 54, 49)
39 = or(-16, 51, 62)
40 = and(7, -5, 63, 55, -11)
41 = or(42, -8)
42 = or(68, 43, 67, 53)
43 = or(66, 14, -20, 1)
44 = and(4, 62, -18, 57, 60)
45 = or(66, 15, 50)
46 = or(59, 11, 13, 12, 2)
47 = and(-4, 69)
48 = or(58, -7, 69)
49 = and(-3, 58, 54)
50 = or(4, 14, 57)
51 = or(-11, 52, 9)
52 = or(59, 66, -4)
53 = and(54, 9, 67, -12, 57)
54 = and(56, -19, -2, 65, 67)
55 = and(1, -12, 58)
56 = or(59, -18, 61, 57)
57 = and(59, 60, 12)
58 = and(8, 6, -3, 66)
59 = or(64, 15, 61, 69, -7)
60 = or(62, 18, 66, -19)
61 = or(65, -13)
62 = or(65, 63, -14, -8)
63 = and(3, -19, 64)
64 = or(19, 13)
65 = and(6, -12, -7)
66 = and(-20, -7)
67 = and(6, -13, -14, -15, 2)
68 = or(-4, 70, 5)
69 = and(5, -11, -7, -8, 12)
70 = or(6, 1, 15, -13)
