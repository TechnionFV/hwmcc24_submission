#QCIRFuzz version 0.3
#Namespace(engine='levels', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=20, quantifiers=4, quiet=True, seed=691162260, top_level_quantifier='forall', var_ratio=0.5)
#r UNSAT
#QCIR-G14 70
forall(3, 4, 13, 14, 18)
exists(5, 6, 12, 20)
forall(2, 8, 11, 16, 17, 19)
exists(1, 7, 9, 10, 15)
output(21)
21 = and(63, 51, 50, 38, 62)
22 = and(-20, -6, 5, -8)
23 = or(-18, -16)
24 = and(46, 70)
25 = or(2, 14, -8, -4)
26 = and(59, 36, 42)
27 = and(60, 31, 41, 26, 45)
28 = or(44, 56, 24, 33, 55)
29 = and(24, 33, 44, 48, 55)
30 = or(70, 31)
31 = and(68, 40, 42)
32 = and(15, 6, -17)
33 = or(46, 69, 35, 45)
34 = and(53, 54)
35 = or(42, 40, 22, 66, 36)
36 = or(8, -19)
37 = or(40, 22, 65, 53, 66)
38 = and(64, 39)
39 = or(60, 69, 37)
40 = and(-6, 16, -12)
41 = and(22, 65, 32)
42 = and(7, -9, 17)
43 = and(-9, 11, 12, -18)
44 = or(70, 41)
45 = and(32, 53, 42)
46 = and(36, 59, 52, 40)
47 = or(42, 23, 22)
48 = or(35, 31, 60, 58, 70)
49 = or(2, 12, -16, -18, 20)
50 = and(55, 39, 30, 64, 33)
51 = or(33, 39)
52 = and(-5, -4, -7, -19, 13)
53 = or(-20, -18)
54 = and(-14, -17, 10)
55 = or(47, 26, 34, 58)
56 = and(47, 35, 70, 26)
57 = or(48, 44, 24)
58 = or(66, 22, 40, 43, 42)
59 = or(6, 18, -8, -13)
60 = and(52, 32, 43, 25, 53)
61 = or(39, 48, 33, 55, 30)
62 = or(33, 55, 27, 39, 64)
63 = or(56, 48)
64 = or(35, 26, 58, 46)
65 = or(8, -3, -1)
66 = and(-2, -9)
67 = or(54, 36, 66, 22, 53)
68 = or(-4, 19, -3, -8, 20)
69 = and(23, 32, 52)
70 = or(68, 40)
