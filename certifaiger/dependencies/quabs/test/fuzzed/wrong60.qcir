#QCIRFuzz version 0.3
#Namespace(engine='levels', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=10, quantifiers=4, quiet=True, seed=290720496, top_level_quantifier='forall', var_ratio=0.5)
# r UNSAT
#QCIR-G14 60
forall(7)
exists(1, 4, 6, 10)
forall(8, 9)
exists(2, 3, 5)
output(11)
11 = and(25, 52)
12 = and(56, 15, 38)
13 = and(-1, 7, 2, -8, -5)
14 = or(32, 30, 51, 43, 18)
15 = or(34, 32)
16 = and(43, 45, 55, 23)
17 = or(47, 59)
18 = or(59, 44, 28)
19 = and(26, 59, 46, 42)
20 = or(54, 45)
21 = or(45, 19)
22 = or(15, 35, 60)
23 = and(47, 13)
24 = and(7, -10, -5, 9)
25 = and(57, 29)
26 = and(4, -10)
27 = or(-10, 8, -6, 7)
28 = or(1, -5)
29 = or(23, 45, 55, 50, 19)
30 = or(26, 47, 46)
31 = or(38, 57, 14, 29, 20)
32 = and(44, 59, 27)
33 = or(17, 55, 23, 19, 43)
34 = and(26, 44)
35 = or(54, 43)
36 = and(60, 15, 33, 57, 56)
37 = and(33, 14, 20, 56, 29)
38 = and(34, 19)
39 = and(58, 20, 15, 29)
40 = or(-3, -9, -4, -5)
41 = and(60, 58, 20)
42 = or(4, -10)
43 = or(44, 46, 59, 13)
44 = and(-1, -7)
45 = and(59, 46, 13, 28)
46 = or(9, -1, 10, 7, 8)
47 = or(-2, 7, -10, -5, 4)
48 = and(35, 58, 14)
49 = or(7, -8, 2, -4)
50 = and(42, 13, 27, 44, 26)
51 = or(49, 24, 27)
52 = or(14, 33, 56, 57)
53 = and(57, 56)
54 = and(24, 59, 26, 47)
55 = and(47, 28, 40, 26, 44)
56 = and(55, 50, 43, 19)
57 = or(18, 34)
58 = and(23, 18, 43, 34, 19)
59 = and(1, 6, 10)
60 = or(50, 19, 30, 17, 45)
