#QCIRFuzz version 0.3
#Namespace(engine='levels', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=20, quantifiers=4, quiet=True, seed=205533568, top_level_quantifier='forall', var_ratio=0.5)
# r UNSAT
#QCIR-G14 70
forall(4, 9, 11)
exists(3, 5, 6, 8, 10, 12, 13, 15, 18)
forall(1, 16, 19, 20)
exists(2, 7, 14, 17)
output(21)
21 = or(57, 52, 32)
22 = or(3, 6, -14, -1, -10)
23 = or(-4, 5, -7, -11, -18)
24 = or(68, 61)
25 = and(63, 61, 66, 27, 64)
26 = or(9, -5, -3)
27 = and(22, 23, 37)
28 = or(47, 41, 45, 58, 53)
29 = or(22, 67, 69)
30 = or(47, 34, 53)
31 = or(4, 12, 8, 19)
32 = and(25, 53, 24, 58, 34)
33 = or(65, 68)
34 = or(27, 38, 61, 70)
35 = or(58, 40, 39, 25)
36 = and(-18, -6)
37 = and(-4, -17)
38 = or(23, 50)
39 = or(68, 65)
40 = and(68, 70, 63, 65, 66)
41 = or(65, 29)
42 = or(34, 47, 54, 53, 45)
43 = or(47, 39, 58)
44 = or(54, 25)
45 = or(68, 70, 38, 49)
46 = and(6, -1)
47 = and(38, 68, 61, 65)
48 = or(3, 11, -8, 5, -20)
49 = and(67, 69, 48)
50 = or(-3, -9, 16, 4, 11)
51 = and(14, 2)
52 = and(33, 54, 47)
53 = and(70, 66, 61, 27)
54 = or(63, 66)
55 = or(-14, -13, -17, 6, -19)
56 = or(-9, 16, 6, 17, 2)
57 = and(33, 25, 39, 53, 54)
58 = or(66, 65, 63)
59 = or(54, 41)
60 = or(-19, -16)
61 = or(51, 69, 55)
62 = or(41, 25, 45, 40)
63 = or(56, 31, 22, 48)
64 = or(50, 26, 56)
65 = and(69, 60, 50)
66 = and(51, 50, 26)
67 = and(-1, -8, 9, 2)
68 = and(31, 23, 36)
69 = or(-5, 3, -11, 2)
70 = or(55, 48, 37, 69)
