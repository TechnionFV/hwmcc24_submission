#QCIRFuzz version 0.3
#Namespace(engine='levels', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=10, quantifiers=4, quiet=True, seed=450930375, top_level_quantifier='forall', var_ratio=0.5)
# r SAT
#QCIR-G14 60
forall(4, 5, 7, 9)
exists(1, 8)
forall(10)
exists(2, 3, 6)
output(11)
11 = and(42, 28, 41, 21, 55)
12 = or(51, 18, 60, 45, 53)
13 = or(50, 23, 56, 26, 36)
14 = or(-6, -1, -3, -8)
15 = or(5, 4, 2, -10)
16 = and(50, 36)
17 = or(6, 8, 10, 2, 4)
18 = or(-7, -3, 5)
19 = and(-1, 3, -10)
20 = or(-10, 3)
21 = and(56, 36, 58, 43)
22 = or(4, -3)
23 = or(25, 27, 40, 12)
24 = and(18, 19, 53)
25 = and(22, 15, 51, 45, 47)
26 = and(12, 31, 44, 52)
27 = and(19, 37, 18, 15, 22)
28 = and(23, 43, 34)
29 = or(49, 36, 43, 58)
30 = or(37, 18, 39)
31 = and(15, 19, 18, 60)
32 = and(17, 45, 53, 18, 15)
33 = or(23, 26)
34 = or(32, 25)
35 = and(15, 60, 45, 20, 51)
36 = and(40, 12)
37 = or(-7, 3, -2, 10, 5)
38 = or(37, 17)
39 = and(-6, -9, 8, 10, 5)
40 = and(53, 47)
41 = or(43, 50, 36, 56)
42 = or(58, 49, 43, 50, 23)
43 = or(44, 27, 35, 59)
44 = or(53, 48)
45 = or(-8, 10, 4, -9, 7)
46 = or(50, 58, 43, 26)
47 = or(1, -3, -8, 7)
48 = and(-5, -10)
49 = or(25, 35)
50 = and(12, 52)
51 = or(-6, 4, 3)
52 = and(51, 37, 14, 53, 19)
53 = or(3, -7, -10, -5)
54 = and(39, 20, 45)
55 = or(23, 43)
56 = or(40, 12, 44, 32)
57 = and(34, 26)
58 = or(25, 54, 30)
59 = and(14, 51, 19, 37)
60 = and(7, 2, -3, -9, 1)
