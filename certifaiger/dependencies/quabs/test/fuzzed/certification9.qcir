#QCIRFuzz version 0.3
#Namespace(engine='random', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=20, quantifiers=4, quiet=True, seed=249506271, top_level_quantifier='forall', var_ratio=0.5)
# r UNSAT
#QCIR-G14 70
forall(2, 4, 5, 6, 10, 11, 13, 19)
exists(3, 7, 18)
forall(1, 12, 14, 15, 16, 17)
exists(8, 9, 20)
output(21)
21 = or(45, 29, 43, 32, 57)
22 = and(16, 39, 65, -11)
23 = or(62, 30, 56, 15, 43)
24 = or(50, 46, -2)
25 = and(-5, 55, -9, -19, 47)
26 = and(58, 11, 67, -12)
27 = or(41, 69, 17, -2, 15)
28 = and(55, 36, 18, 52, -19)
29 = and(62, 61, -2, 45, 20)
30 = and(5, 45, 65)
31 = or(56, 32, 54, 57, 40)
32 = and(19, -5, 50, 57)
33 = and(6, 58, 65)
34 = or(54, 46, 63, -14, 9)
35 = and(53, 40, 2, 51)
36 = and(11, -7, 60, 55, 58)
37 = or(38, 44, 4, 57)
38 = or(49, -18)
39 = or(10, 54, 42)
40 = and(61, 11)
41 = or(20, 63, -4, 64, 49)
42 = or(4, 57, 43)
43 = and(54, 61, 60)
44 = and(47, 59)
45 = or(70, 46)
46 = and(-5, 55, 57, 63, -10)
47 = and(69, 65)
48 = or(64, -4, 11, 61, -17)
49 = or(7, -18, 3)
50 = and(59, 18)
51 = or(66, -7)
52 = or(-6, 54, 69, 13)
53 = and(56, 63, -12, 67, -7)
54 = or(7, -3, 56, -5)
55 = or(4, 63, 56, 15, -20)
56 = and(15, 12)
57 = and(64, 59, 67)
58 = or(-11, 63)
59 = and(10, 13, -8)
60 = or(-19, -12, 64)
61 = and(63, 70, 8, -19)
62 = or(64, 5, 65)
63 = or(-3, 15)
64 = or(69, 67, -14, -13, -7)
65 = and(11, 7, -10, 69, 8)
66 = and(-4, 16, 67)
67 = or(4, -19)
68 = or(-19, -12)
69 = and(70, 7)
70 = or(-15, 17, 4)
