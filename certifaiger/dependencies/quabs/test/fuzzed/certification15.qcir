#QCIRFuzz version 0.3
#Namespace(engine='levels', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=20, quantifiers=4, quiet=True, seed=604075703, top_level_quantifier='forall', var_ratio=0.5)
#r SAT
#QCIR-G14 70
forall(4, 7, 8, 14, 16, 20)
exists(1, 2, 6, 10, 11, 13)
forall(9, 15, 17)
exists(3, 5, 12, 18, 19)
output(21)
21 = or(51, 52, 31)
22 = or(46, 48)
23 = or(-16, 18, -15, -1, -13)
24 = or(27, 46, 29, 49)
25 = or(56, 23, 42, 35)
26 = or(68, 54, 56)
27 = and(13, -19, -8, 18, -4)
28 = or(24, 69, 30, 33)
29 = or(17, -13)
30 = and(27, 35, 68)
31 = and(32, 53)
32 = or(69, 57)
33 = and(56, 48, 62)
34 = and(37, 47, 45, 24, 59)
35 = or(-7, 8)
36 = and(69, 47, 25)
37 = and(56, 66, 54, 40)
38 = or(57, 37, 33)
39 = and(58, 24)
40 = or(2, 5, -19, 20, 10)
41 = or(24, 59, 22, 37, 25)
42 = and(20, 5, -3, 17)
43 = or(41, 50)
44 = and(28, 36)
45 = and(27, 35, 23)
46 = and(12, 16)
47 = and(23, 48)
48 = and(-19, -4, 17, 13)
49 = or(7, -12, -18)
50 = and(22, 69, 57, 24, 25)
51 = and(38, 67, 39)
52 = and(32, 34, 65, 38, 67)
53 = or(37, 33, 30)
54 = or(-9, 19, 20, 7, 8)
55 = and(25, 45)
56 = or(-19, -13)
57 = or(46, 60, 35)
58 = or(60, 42, 27, 66)
59 = or(62, 48, 35, 40)
60 = or(-13, -5)
61 = or(33, 47, 45, 58, 22)
62 = or(-15, -2, 7)
63 = and(47, 37, 69, 45, 24)
64 = and(53, 50, 38)
65 = and(69, 57, 59)
66 = and(11, 6)
67 = and(33, 37, 24, 22)
68 = or(4, -19, 3, -18, 16)
69 = or(68, 35, 40, 48)
70 = and(32, 28, 36)
