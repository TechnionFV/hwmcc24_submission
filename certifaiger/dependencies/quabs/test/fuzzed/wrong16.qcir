#QCIRFuzz version 0.3
#Namespace(engine='random', gate_ratio=0.5, level=4, max=5, min=2, num_gates=50, num_vars=10, quantifiers=4, quiet=True, seed=583597243, top_level_quantifier='forall', var_ratio=0.5)
# r UNSAT
#QCIR-G14 60
forall(2, 6, 8, 10)
exists(3, 9)
forall(5)
exists(1, 4, 7)
output(11)
11 = or(13, 27, 19)
12 = or(51, 57, 15, 14, 26)
13 = and(60, 55)
14 = or(9, 32, 20, 53, 56)
15 = or(21, 35, 55, 3, 4)
16 = and(19, 49, 45, 57)
17 = and(25, 46, 58, 28, 19)
18 = or(40, 25, 41, 19)
19 = and(21, 53)
20 = or(30, 41, 37, 36)
21 = and(27, 56, -5, 23)
22 = and(50, 25, 53, 33, 36)
23 = or(30, -8, 40, 36, -3)
24 = and(51, 4)
25 = and(1, 27)
26 = or(47, 51, 36, 39)
27 = and(-10, 36, 31, 58)
28 = and(48, 4)
29 = or(58, -2, 34)
30 = or(60, 35, 48, 56)
31 = or(45, 38, 35, 37)
32 = or(50, 6)
33 = or(40, 44, 35)
34 = or(43, 45, 39, 48)
35 = or(48, 56, 38, 52, 41)
36 = or(57, 43)
37 = or(-9, 45, 7, 58)
38 = and(3, 46)
39 = and(56, -5)
40 = or(52, 7, -4, 45, 60)
41 = and(55, 46)
42 = or(56, -1)
43 = and(3, 45, 46, 52, 1)
44 = and(50, 8, 10, 58, 45)
45 = or(54, 5, 4, 46, 56)
46 = and(47, 48)
47 = and(2, -1, 55)
48 = and(8, 56, 55)
49 = and(-3, 57)
50 = or(56, 52)
51 = and(60, 52, -2, 4, -5)
52 = and(-10, -1, -7, 56, 53)
53 = and(-1, -5, 56, 3)
54 = and(59, 56)
55 = or(-2, -1, 7)
56 = and(3, 57)
57 = or(8, 59, 58, -6)
58 = or(-3, 5, 10, 1)
59 = and(3, 7, -5, 2, -6)
60 = and(10, 5)
